/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { NFTMarket, NFTMarketInterface } from '../../contracts/NFTMarket'

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'lender',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'nftAddress',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'maximumEndTime',
                type: 'uint256',
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'paymentToken',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'pricePerDay',
                        type: 'uint256',
                    },
                ],
                indexed: false,
                internalType: 'struct Payment',
                name: 'payment',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'collateralToken',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'collateralAmount',
                        type: 'uint256',
                    },
                ],
                indexed: false,
                internalType: 'struct Collateral',
                name: 'collateral',
                type: 'tuple',
            },
        ],
        name: 'NFTListed',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'nftAddress',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256',
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'renter',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'expiryTime',
                        type: 'uint256',
                    },
                ],
                indexed: false,
                internalType: 'struct Rental',
                name: 'rental',
                type: 'tuple',
            },
        ],
        name: 'NFTRented',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'nftAddress',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256',
            },
        ],
        name: 'cancelNFTListing',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getAllListings',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'nftAddress',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'tokenId',
                        type: 'uint256',
                    },
                    {
                        internalType: 'address',
                        name: 'lender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'maximumEndTime',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'createTime',
                        type: 'uint256',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'renter',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'expiryTime',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct Rental',
                        name: 'rental',
                        type: 'tuple',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'paymentToken',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'pricePerDay',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct Payment',
                        name: 'payment',
                        type: 'tuple',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'collateralToken',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'collateralAmount',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct Collateral',
                        name: 'collateral',
                        type: 'tuple',
                    },
                ],
                internalType: 'struct NFTListing[]',
                name: '',
                type: 'tuple[]',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'nftAddress',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256',
            },
        ],
        name: 'getListing',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'nftAddress',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'tokenId',
                        type: 'uint256',
                    },
                    {
                        internalType: 'address',
                        name: 'lender',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'maximumEndTime',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'createTime',
                        type: 'uint256',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'renter',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'expiryTime',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct Rental',
                        name: 'rental',
                        type: 'tuple',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'paymentToken',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'pricePerDay',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct Payment',
                        name: 'payment',
                        type: 'tuple',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'collateralToken',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'collateralAmount',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct Collateral',
                        name: 'collateral',
                        type: 'tuple',
                    },
                ],
                internalType: 'struct NFTListing',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'nftAddress',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'maximumEndTime',
                type: 'uint256',
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'paymentToken',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'pricePerDay',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct Payment',
                name: 'payment',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'collateralToken',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'collateralAmount',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct Collateral',
                name: 'collateral',
                type: 'tuple',
            },
        ],
        name: 'listNFT',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        name: 'listings',
        outputs: [
            {
                internalType: 'address',
                name: 'nftAddress',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256',
            },
            {
                internalType: 'address',
                name: 'lender',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'maximumEndTime',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'createTime',
                type: 'uint256',
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'renter',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'expiryTime',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct Rental',
                name: 'rental',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'paymentToken',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'pricePerDay',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct Payment',
                name: 'payment',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'collateralToken',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'collateralAmount',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct Collateral',
                name: 'collateral',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
            {
                internalType: 'uint256[]',
                name: '',
                type: 'uint256[]',
            },
            {
                internalType: 'uint256[]',
                name: '',
                type: 'uint256[]',
            },
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        name: 'onERC1155BatchReceived',
        outputs: [
            {
                internalType: 'bytes4',
                name: '',
                type: 'bytes4',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        name: 'onERC1155Received',
        outputs: [
            {
                internalType: 'bytes4',
                name: '',
                type: 'bytes4',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes',
            },
        ],
        name: 'onERC721Received',
        outputs: [
            {
                internalType: 'bytes4',
                name: '',
                type: 'bytes4',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'nftAddress',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256',
            },
        ],
        name: 'returnRentedNFT',
        outputs: [
            {
                internalType: 'uint256',
                name: 'txId',
                type: 'uint256',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes4',
                name: 'interfaceId',
                type: 'bytes4',
            },
        ],
        name: 'supportsInterface',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
]

const _bytecode =
    '0x60806040523480156200001157600080fd5b5062000032620000266200003f60201b60201c565b6200004760201b60201c565b600180819055506200010b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61257b806200011b6000396000f3fe6080604052600436106100c25760003560e01c8063ae73ccec1161007f578063de74e57b11610059578063de74e57b14610281578063ed5cb476146102c5578063f23a6e61146102ee578063f2fde38b1461032b576100c2565b8063ae73ccec146101e9578063b9be044714610214578063bc197c8114610244576100c2565b806301ffc9a7146100c7578063150b7a021461010457806341b0291214610141578063715018a61461016a57806388700d1c146101815780638da5cb5b146101be575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e991906116ca565b610354565b6040516100fb9190611712565b60405180910390f35b34801561011057600080fd5b5061012b60048036038101906101269190611907565b6103ce565b6040516101389190611999565b60405180910390f35b34801561014d57600080fd5b50610168600480360381019061016391906119b4565b6103e2565b005b34801561017657600080fd5b5061017f6103f8565b005b34801561018d57600080fd5b506101a860048036038101906101a391906119b4565b61040c565b6040516101b59190611b42565b60405180910390f35b3480156101ca57600080fd5b506101d361069e565b6040516101e09190611b6d565b60405180910390f35b3480156101f557600080fd5b506101fe6106c7565b60405161020b9190611cdb565b60405180910390f35b61022e600480360381019061022991906119b4565b61094d565b60405161023b9190611d0c565b60405180910390f35b34801561025057600080fd5b5061026b60048036038101906102669190611def565b610955565b6040516102789190611999565b60405180910390f35b34801561028d57600080fd5b506102a860048036038101906102a39190611ebe565b61096a565b6040516102bc989796959493929190611f78565b60405180910390f35b3480156102d157600080fd5b506102ec60048036038101906102e7919061209c565b610b40565b005b3480156102fa57600080fd5b5061031560048036038101906103109190612117565b6110a5565b6040516103229190611999565b60405180910390f35b34801561033757600080fd5b50610352600480360381019061034d91906121ae565b6110ba565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c757506103c68261113e565b5b9050919050565b600063150b7a0260e01b9050949350505050565b6103f46103ed6111a8565b83836111b0565b5050565b610400611401565b61040a600061147f565b565b61041461154b565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600982016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081525050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606003805480602002602001604051908101604052809291908181526020016000905b8282101561094457838290600052602060002090600b0201604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600982016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081525050815260200190600101906106eb565b50505050905090565b600092915050565b600063bc197c8160e01b905095945050505050565b6003818154811061097a57600080fd5b90600052602060002090600b02016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015490806005016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090806007016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090806009016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905088565b60026001541415610b86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7d90612238565b60405180910390fd5b6002600181905550610ba0610b996111a8565b86866111b0565b6000610baa6111a8565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000209050868160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160010181905550818160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160030181905550428160040181905550838160070160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050828160090160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015590505060038190806001815401808255809150506001900390600052602060002090600b02016000909190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820154816004015560058201816005016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155505060078201816007016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155505060098201816009016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155505050508673ffffffffffffffffffffffffffffffffffffffff166342842e0e8330896040518463ffffffff1660e01b815260040161101b93929190612258565b600060405180830381600087803b15801561103557600080fd5b505af1158015611049573d6000803e3d6000fd5b505050507f33375d78bcb09790857a4583927d3ac93d1f98336fa490a47304999668620f0d6110766111a8565b888888888860405161108d9695949392919061228f565b60405180910390a15050600180819055505050505050565b600063f23a6e6160e01b905095945050505050565b6110c2611401565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112990612363565b60405180910390fd5b61113b8161147f565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016111eb9190611d0c565b60206040518083038186803b15801561120357600080fd5b505afa158015611217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123b9190612398565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061132a57508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b81526004016112c29190611d0c565b60206040518083038186803b1580156112da57600080fd5b505afa1580156112ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113129190612398565b73ffffffffffffffffffffffffffffffffffffffff16145b806113bc57508273ffffffffffffffffffffffffffffffffffffffff1663e985e9c582866040518363ffffffff1660e01b815260040161136b9291906123c5565b60206040518083038186803b15801561138357600080fd5b505afa158015611397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bb919061241a565b5b6113fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f2906124b9565b60405180910390fd5b50505050565b611409611543565b73ffffffffffffffffffffffffffffffffffffffff1661142761069e565b73ffffffffffffffffffffffffffffffffffffffff161461147d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147490612525565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016115ae6115ce565b81526020016115bb6115fe565b81526020016115c861162e565b81525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116a781611672565b81146116b257600080fd5b50565b6000813590506116c48161169e565b92915050565b6000602082840312156116e0576116df611668565b5b60006116ee848285016116b5565b91505092915050565b60008115159050919050565b61170c816116f7565b82525050565b60006020820190506117276000830184611703565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117588261172d565b9050919050565b6117688161174d565b811461177357600080fd5b50565b6000813590506117858161175f565b92915050565b6000819050919050565b61179e8161178b565b81146117a957600080fd5b50565b6000813590506117bb81611795565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611814826117cb565b810181811067ffffffffffffffff82111715611833576118326117dc565b5b80604052505050565b600061184661165e565b9050611852828261180b565b919050565b600067ffffffffffffffff821115611872576118716117dc565b5b61187b826117cb565b9050602081019050919050565b82818337600083830152505050565b60006118aa6118a584611857565b61183c565b9050828152602081018484840111156118c6576118c56117c6565b5b6118d1848285611888565b509392505050565b600082601f8301126118ee576118ed6117c1565b5b81356118fe848260208601611897565b91505092915050565b6000806000806080858703121561192157611920611668565b5b600061192f87828801611776565b945050602061194087828801611776565b9350506040611951878288016117ac565b925050606085013567ffffffffffffffff8111156119725761197161166d565b5b61197e878288016118d9565b91505092959194509250565b61199381611672565b82525050565b60006020820190506119ae600083018461198a565b92915050565b600080604083850312156119cb576119ca611668565b5b60006119d985828601611776565b92505060206119ea858286016117ac565b9150509250929050565b6119fd8161174d565b82525050565b611a0c8161178b565b82525050565b604082016000820151611a2860008501826119f4565b506020820151611a3b6020850182611a03565b50505050565b604082016000820151611a5760008501826119f4565b506020820151611a6a6020850182611a03565b50505050565b604082016000820151611a8660008501826119f4565b506020820151611a996020850182611a03565b50505050565b61016082016000820151611ab660008501826119f4565b506020820151611ac96020850182611a03565b506040820151611adc60408501826119f4565b506060820151611aef6060850182611a03565b506080820151611b026080850182611a03565b5060a0820151611b1560a0850182611a12565b5060c0820151611b2860e0850182611a41565b5060e0820151611b3c610120850182611a70565b50505050565b600061016082019050611b586000830184611a9f565b92915050565b611b678161174d565b82525050565b6000602082019050611b826000830184611b5e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61016082016000820151611bcb60008501826119f4565b506020820151611bde6020850182611a03565b506040820151611bf160408501826119f4565b506060820151611c046060850182611a03565b506080820151611c176080850182611a03565b5060a0820151611c2a60a0850182611a12565b5060c0820151611c3d60e0850182611a41565b5060e0820151611c51610120850182611a70565b50505050565b6000611c638383611bb4565b6101608301905092915050565b6000602082019050919050565b6000611c8882611b88565b611c928185611b93565b9350611c9d83611ba4565b8060005b83811015611cce578151611cb58882611c57565b9750611cc083611c70565b925050600181019050611ca1565b5085935050505092915050565b60006020820190508181036000830152611cf58184611c7d565b905092915050565b611d068161178b565b82525050565b6000602082019050611d216000830184611cfd565b92915050565b600067ffffffffffffffff821115611d4257611d416117dc565b5b602082029050602081019050919050565b600080fd5b6000611d6b611d6684611d27565b61183c565b90508083825260208201905060208402830185811115611d8e57611d8d611d53565b5b835b81811015611db75780611da388826117ac565b845260208401935050602081019050611d90565b5050509392505050565b600082601f830112611dd657611dd56117c1565b5b8135611de6848260208601611d58565b91505092915050565b600080600080600060a08688031215611e0b57611e0a611668565b5b6000611e1988828901611776565b9550506020611e2a88828901611776565b945050604086013567ffffffffffffffff811115611e4b57611e4a61166d565b5b611e5788828901611dc1565b935050606086013567ffffffffffffffff811115611e7857611e7761166d565b5b611e8488828901611dc1565b925050608086013567ffffffffffffffff811115611ea557611ea461166d565b5b611eb1888289016118d9565b9150509295509295909350565b600060208284031215611ed457611ed3611668565b5b6000611ee2848285016117ac565b91505092915050565b604082016000820151611f0160008501826119f4565b506020820151611f146020850182611a03565b50505050565b604082016000820151611f3060008501826119f4565b506020820151611f436020850182611a03565b50505050565b604082016000820151611f5f60008501826119f4565b506020820151611f726020850182611a03565b50505050565b600061016082019050611f8e600083018b611b5e565b611f9b602083018a611cfd565b611fa86040830189611b5e565b611fb56060830188611cfd565b611fc26080830187611cfd565b611fcf60a0830186611eeb565b611fdc60e0830185611f1a565b611fea610120830184611f49565b9998505050505050505050565b600080fd5b60006040828403121561201257612011611ff7565b5b61201c604061183c565b9050600061202c84828501611776565b6000830152506020612040848285016117ac565b60208301525092915050565b60006040828403121561206257612061611ff7565b5b61206c604061183c565b9050600061207c84828501611776565b6000830152506020612090848285016117ac565b60208301525092915050565b600080600080600060e086880312156120b8576120b7611668565b5b60006120c688828901611776565b95505060206120d7888289016117ac565b94505060406120e8888289016117ac565b93505060606120f988828901611ffc565b92505060a061210a8882890161204c565b9150509295509295909350565b600080600080600060a0868803121561213357612132611668565b5b600061214188828901611776565b955050602061215288828901611776565b9450506040612163888289016117ac565b9350506060612174888289016117ac565b925050608086013567ffffffffffffffff8111156121955761219461166d565b5b6121a1888289016118d9565b9150509295509295909350565b6000602082840312156121c4576121c3611668565b5b60006121d284828501611776565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612222601f836121db565b915061222d826121ec565b602082019050919050565b6000602082019050818103600083015261225181612215565b9050919050565b600060608201905061226d6000830186611b5e565b61227a6020830185611b5e565b6122876040830184611cfd565b949350505050565b6000610100820190506122a56000830189611b5e565b6122b26020830188611b5e565b6122bf6040830187611cfd565b6122cc6060830186611cfd565b6122d96080830185611f1a565b6122e660c0830184611f49565b979650505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061234d6026836121db565b9150612358826122f1565b604082019050919050565b6000602082019050818103600083015261237c81612340565b9050919050565b6000815190506123928161175f565b92915050565b6000602082840312156123ae576123ad611668565b5b60006123bc84828501612383565b91505092915050565b60006040820190506123da6000830185611b5e565b6123e76020830184611b5e565b9392505050565b6123f7816116f7565b811461240257600080fd5b50565b600081519050612414816123ee565b92915050565b6000602082840312156124305761242f611668565b5b600061243e84828501612405565b91505092915050565b7f596f75206d75737420626520746865206f776e6572206f7220617070726f766560008201527f6420746f20646f2074686973202e2e2e00000000000000000000000000000000602082015250565b60006124a36030836121db565b91506124ae82612447565b604082019050919050565b600060208201905081810360008301526124d281612496565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061250f6020836121db565b915061251a826124d9565b602082019050919050565b6000602082019050818103600083015261253e81612502565b905091905056fea2646970667358221220cd0bebbeeb62457408bdf58d38d4edf98cc48a3e2fcb2f5a1780f1e637573ed464736f6c63430008090033'

type NFTMarketConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
    xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class NFTMarket__factory extends ContractFactory {
    constructor(...args: NFTMarketConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args)
        } else {
            super(_abi, _bytecode, args[0])
        }
    }

    override deploy(
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<NFTMarket> {
        return super.deploy(overrides || {}) as Promise<NFTMarket>
    }
    override getDeployTransaction(
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(overrides || {})
    }
    override attach(address: string): NFTMarket {
        return super.attach(address) as NFTMarket
    }
    override connect(signer: Signer): NFTMarket__factory {
        return super.connect(signer) as NFTMarket__factory
    }

    static readonly bytecode = _bytecode
    static readonly abi = _abi
    static createInterface(): NFTMarketInterface {
        return new utils.Interface(_abi) as NFTMarketInterface
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): NFTMarket {
        return new Contract(address, _abi, signerOrProvider) as NFTMarket
    }
}
