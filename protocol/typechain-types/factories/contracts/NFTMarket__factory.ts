/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CancelNFTListing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Rental",
        name: "rental",
        type: "tuple",
      },
    ],
    name: "NFTLent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Rental",
        name: "rental",
        type: "tuple",
      },
    ],
    name: "NFTRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelNFTListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maximumEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "renter",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "expiryTime",
                type: "uint256",
              },
            ],
            internalType: "struct Rental",
            name: "rental",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "pricePerDay",
                type: "uint256",
              },
            ],
            internalType: "struct Payment",
            name: "payment",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct Collateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "daysToRent",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "isNativeChain",
        type: "bool",
      },
    ],
    name: "lend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "daysToRent",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maximumEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "renter",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "expiryTime",
                type: "uint256",
              },
            ],
            internalType: "struct Rental",
            name: "rental",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "pricePerDay",
                type: "uint256",
              },
            ],
            internalType: "struct Payment",
            name: "payment",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct Collateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "rent",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "returnRentedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003f60201b60201c565b6200004760201b60201c565b600180819055506200010b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612b81806200011b6000396000f3fe6080604052600436106100c25760003560e01c80638da5cb5b1161007f578063db8d5cc111610059578063db8d5cc114610287578063ed5cb476146102a3578063f23a6e61146102cc578063f2fde38b14610309576100c2565b80638da5cb5b146101ef578063b9be04471461021a578063bc197c811461024a576100c2565b806301ffc9a7146100c7578063150b7a021461010457806341b0291214610141578063715018a61461016a5780637801f6a21461018157806388700d1c146101b2575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190611726565b610332565b6040516100fb919061176e565b60405180910390f35b34801561011057600080fd5b5061012b60048036038101906101269190611963565b6103ac565b60405161013891906119f5565b60405180910390f35b34801561014d57600080fd5b5061016860048036038101906101639190611a10565b6103c0565b005b34801561017657600080fd5b5061017f6103d6565b005b61019b60048036038101906101969190611c20565b6103ea565b6040516101a9929190611d1f565b60405180910390f35b3480156101be57600080fd5b506101d960048036038101906101d49190611a10565b610a08565b6040516101e69190611e76565b60405180910390f35b3480156101fb57600080fd5b50610204610c39565b6040516102119190611ea1565b60405180910390f35b610234600480360381019061022f9190611a10565b610c62565b6040516102419190611ebc565b60405180910390f35b34801561025657600080fd5b50610271600480360381019061026c9190611f9f565b610c6a565b60405161027e91906119f5565b60405180910390f35b6102a1600480360381019061029c919061209a565b610c7f565b005b3480156102af57600080fd5b506102ca60048036038101906102c59190612101565b610e98565b005b3480156102d857600080fd5b506102f360048036038101906102ee919061217c565b611126565b60405161030091906119f5565b60405180910390f35b34801561031557600080fd5b50610330600480360381019061032b9190612213565b61113b565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103a557506103a4826111bf565b5b9050919050565b600063150b7a0260e01b9050949350505050565b6103d26103cb611229565b8383611231565b5050565b6103de611482565b6103e86000611500565b565b6060600060026001541415610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b9061228c565b60405180910390fd5b6002600181905550600042620151808661ffff1661045291906122ea565b62ffffff166104619190612327565b905060008561ffff16116104aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a1906123ef565b60405180910390fd5b83602001518111156104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e89061245b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1684606001516000015173ffffffffffffffffffffffffffffffffffffffff1614801561053d57506000846060015160200151145b61057c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610573906124c7565b60405180910390fd5b6000846080015160000151905060008560a0015160000151905060008660800151602001518861ffff166105b091906124e7565b9050808373ffffffffffffffffffffffffffffffffffffffff166370a082316105d7611229565b6040518263ffffffff1660e01b81526004016105f39190611ea1565b60206040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190612556565b1015610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b906125cf565b60405180910390fd5b8660a00151602001518273ffffffffffffffffffffffffffffffffffffffff166370a082316106b1611229565b6040518263ffffffff1660e01b81526004016106cd9190611ea1565b60206040518083038186803b1580156106e557600080fd5b505afa1580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d9190612556565b101561075e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107559061263b565b60405180910390fd5b8660a001516000015173ffffffffffffffffffffffffffffffffffffffff1687608001516000015173ffffffffffffffffffffffffffffffffffffffff16141561088e5760008760a0015160200151826107b89190612327565b9050808473ffffffffffffffffffffffffffffffffffffffff166370a082316107df611229565b6040518263ffffffff1660e01b81526004016107fb9190611ea1565b60206040518083038186803b15801561081357600080fd5b505afa158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b9190612556565b101561088c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610883906126a7565b60405180910390fd5b505b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd6108b2611229565b308a60a00151602001516040518463ffffffff1660e01b81526004016108da939291906126c7565b602060405180830381600087803b1580156108f457600080fd5b505af1158015610908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092c9190612713565b507fd5f86e4b4526d796a88ce410e7a72c3b2599bab2c0f9d0acef0ddf0cd44ca6a18a8a89606001516040516109649392919061276f565b60405180910390a18273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156109b257600080fd5b505afa1580156109c6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109ef9190612847565b8195509550505050506001808190555094509492505050565b610a106115cc565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081525050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600092915050565b600063bc197c8160e01b905095945050505050565b60026001541415610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc9061228c565b60405180910390fd5b6002600181905550600042620151808461ffff16610ce391906122ea565b62ffffff16610cf29190612327565b905060006040518060400160405280610d09611229565b73ffffffffffffffffffffffffffffffffffffffff16815260200183815250905082610dd85780600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060030160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505b8573ffffffffffffffffffffffffffffffffffffffff166342842e0e30610dfd611229565b886040518463ffffffff1660e01b8152600401610e1c939291906126c7565b600060405180830381600087803b158015610e3657600080fd5b505af1158015610e4a573d6000803e3d6000fd5b505050507fdcb8497c593bb786792fcd024fb45d43bd411e75ccc242350b97d31b6c42f042868683604051610e819392919061276f565b60405180910390a150506001808190555050505050565b60026001541415610ede576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed59061228c565b60405180910390fd5b6002600181905550610ef8610ef1611229565b8686611231565b6000610f02611229565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160010181905550428160020181905550838160050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050828160070160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050508673ffffffffffffffffffffffffffffffffffffffff166342842e0e8330896040518463ffffffff1660e01b815260040161109c939291906126c7565b600060405180830381600087803b1580156110b657600080fd5b505af11580156110ca573d6000803e3d6000fd5b505050507f33375d78bcb09790857a4583927d3ac93d1f98336fa490a47304999668620f0d6110f7611229565b888888888860405161110e969594939291906128ee565b60405180910390a15050600180819055505050505050565b600063f23a6e6160e01b905095945050505050565b611143611482565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111aa906129c2565b60405180910390fd5b6111bc81611500565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161126c9190611ebc565b60206040518083038186803b15801561128457600080fd5b505afa158015611298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bc91906129f7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806113ab57508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b81526004016113439190611ebc565b60206040518083038186803b15801561135b57600080fd5b505afa15801561136f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139391906129f7565b73ffffffffffffffffffffffffffffffffffffffff16145b8061143d57508273ffffffffffffffffffffffffffffffffffffffff1663e985e9c582866040518363ffffffff1660e01b81526004016113ec929190612a24565b60206040518083038186803b15801561140457600080fd5b505afa158015611418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143c9190612713565b5b61147c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147390612abf565b60405180910390fd5b50505050565b61148a6115c4565b73ffffffffffffffffffffffffffffffffffffffff166114a8610c39565b73ffffffffffffffffffffffffffffffffffffffff16146114fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f590612b2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200161160a61162a565b815260200161161761165a565b815260200161162461168a565b81525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611703816116ce565b811461170e57600080fd5b50565b600081359050611720816116fa565b92915050565b60006020828403121561173c5761173b6116c4565b5b600061174a84828501611711565b91505092915050565b60008115159050919050565b61176881611753565b82525050565b6000602082019050611783600083018461175f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117b482611789565b9050919050565b6117c4816117a9565b81146117cf57600080fd5b50565b6000813590506117e1816117bb565b92915050565b6000819050919050565b6117fa816117e7565b811461180557600080fd5b50565b600081359050611817816117f1565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61187082611827565b810181811067ffffffffffffffff8211171561188f5761188e611838565b5b80604052505050565b60006118a26116ba565b90506118ae8282611867565b919050565b600067ffffffffffffffff8211156118ce576118cd611838565b5b6118d782611827565b9050602081019050919050565b82818337600083830152505050565b6000611906611901846118b3565b611898565b90508281526020810184848401111561192257611921611822565b5b61192d8482856118e4565b509392505050565b600082601f83011261194a5761194961181d565b5b813561195a8482602086016118f3565b91505092915050565b6000806000806080858703121561197d5761197c6116c4565b5b600061198b878288016117d2565b945050602061199c878288016117d2565b93505060406119ad87828801611808565b925050606085013567ffffffffffffffff8111156119ce576119cd6116c9565b5b6119da87828801611935565b91505092959194509250565b6119ef816116ce565b82525050565b6000602082019050611a0a60008301846119e6565b92915050565b60008060408385031215611a2757611a266116c4565b5b6000611a35858286016117d2565b9250506020611a4685828601611808565b9150509250929050565b600061ffff82169050919050565b611a6781611a50565b8114611a7257600080fd5b50565b600081359050611a8481611a5e565b92915050565b600080fd5b600060408284031215611aa557611aa4611a8a565b5b611aaf6040611898565b90506000611abf848285016117d2565b6000830152506020611ad384828501611808565b60208301525092915050565b600060408284031215611af557611af4611a8a565b5b611aff6040611898565b90506000611b0f848285016117d2565b6000830152506020611b2384828501611808565b60208301525092915050565b600060408284031215611b4557611b44611a8a565b5b611b4f6040611898565b90506000611b5f848285016117d2565b6000830152506020611b7384828501611808565b60208301525092915050565b60006101208284031215611b9657611b95611a8a565b5b611ba060c0611898565b90506000611bb0848285016117d2565b6000830152506020611bc484828501611808565b6020830152506040611bd884828501611808565b6040830152506060611bec84828501611a8f565b60608301525060a0611c0084828501611adf565b60808301525060e0611c1484828501611b2f565b60a08301525092915050565b6000806000806101808587031215611c3b57611c3a6116c4565b5b6000611c49878288016117d2565b9450506020611c5a87828801611808565b9350506040611c6b87828801611a75565b9250506060611c7c87828801611b7f565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015611cc2578082015181840152602081019050611ca7565b83811115611cd1576000848401525b50505050565b6000611ce282611c88565b611cec8185611c93565b9350611cfc818560208601611ca4565b611d0581611827565b840191505092915050565b611d19816117e7565b82525050565b60006040820190508181036000830152611d398185611cd7565b9050611d486020830184611d10565b9392505050565b611d58816117a9565b82525050565b611d67816117e7565b82525050565b604082016000820151611d836000850182611d4f565b506020820151611d966020850182611d5e565b50505050565b604082016000820151611db26000850182611d4f565b506020820151611dc56020850182611d5e565b50505050565b604082016000820151611de16000850182611d4f565b506020820151611df46020850182611d5e565b50505050565b61012082016000820151611e116000850182611d4f565b506020820151611e246020850182611d5e565b506040820151611e376040850182611d5e565b506060820151611e4a6060850182611d6d565b506080820151611e5d60a0850182611d9c565b5060a0820151611e7060e0850182611dcb565b50505050565b600061012082019050611e8c6000830184611dfa565b92915050565b611e9b816117a9565b82525050565b6000602082019050611eb66000830184611e92565b92915050565b6000602082019050611ed16000830184611d10565b92915050565b600067ffffffffffffffff821115611ef257611ef1611838565b5b602082029050602081019050919050565b600080fd5b6000611f1b611f1684611ed7565b611898565b90508083825260208201905060208402830185811115611f3e57611f3d611f03565b5b835b81811015611f675780611f538882611808565b845260208401935050602081019050611f40565b5050509392505050565b600082601f830112611f8657611f8561181d565b5b8135611f96848260208601611f08565b91505092915050565b600080600080600060a08688031215611fbb57611fba6116c4565b5b6000611fc9888289016117d2565b9550506020611fda888289016117d2565b945050604086013567ffffffffffffffff811115611ffb57611ffa6116c9565b5b61200788828901611f71565b935050606086013567ffffffffffffffff811115612028576120276116c9565b5b61203488828901611f71565b925050608086013567ffffffffffffffff811115612055576120546116c9565b5b61206188828901611935565b9150509295509295909350565b61207781611753565b811461208257600080fd5b50565b6000813590506120948161206e565b92915050565b600080600080608085870312156120b4576120b36116c4565b5b60006120c2878288016117d2565b94505060206120d387828801611808565b93505060406120e487828801611a75565b92505060606120f587828801612085565b91505092959194509250565b600080600080600060e0868803121561211d5761211c6116c4565b5b600061212b888289016117d2565b955050602061213c88828901611808565b945050604061214d88828901611808565b935050606061215e88828901611adf565b92505060a061216f88828901611b2f565b9150509295509295909350565b600080600080600060a08688031215612198576121976116c4565b5b60006121a6888289016117d2565b95505060206121b7888289016117d2565b94505060406121c888828901611808565b93505060606121d988828901611808565b925050608086013567ffffffffffffffff8111156121fa576121f96116c9565b5b61220688828901611935565b9150509295509295909350565b600060208284031215612229576122286116c4565b5b6000612237848285016117d2565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612276601f83611c93565b915061228182612240565b602082019050919050565b600060208201905081810360008301526122a581612269565b9050919050565b600062ffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122f5826122ac565b9150612300836122ac565b92508162ffffff048311821515161561231c5761231b6122bb565b5b828202905092915050565b6000612332826117e7565b915061233d836117e7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612372576123716122bb565b5b828201905092915050565b7f5468652072656e74616c20706572696f64206d7573742062652067726561746560008201527f72207468616e2030206461797300000000000000000000000000000000000000602082015250565b60006123d9602d83611c93565b91506123e48261237d565b604082019050919050565b60006020820190508181036000830152612408816123cc565b9050919050565b7f52656e74616c2074696d656672616d6520746f6f206c6f6e672e000000000000600082015250565b6000612445601a83611c93565b91506124508261240f565b602082019050919050565b6000602082019050818103600083015261247481612438565b9050919050565b7f54686973206974656d20697320616c72656164792072656e7465642e00000000600082015250565b60006124b1601c83611c93565b91506124bc8261247b565b602082019050919050565b600060208201905081810360008301526124e0816124a4565b9050919050565b60006124f2826117e7565b91506124fd836117e7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612536576125356122bb565b5b828202905092915050565b600081519050612550816117f1565b92915050565b60006020828403121561256c5761256b6116c4565b5b600061257a84828501612541565b91505092915050565b7f496e73756666696369656e74207061796d656e742066756e6473000000000000600082015250565b60006125b9601a83611c93565b91506125c482612583565b602082019050919050565b600060208201905081810360008301526125e8816125ac565b9050919050565b7f496e73756666696369656e7420636f6c6c61746572616c2066756e6473000000600082015250565b6000612625601d83611c93565b9150612630826125ef565b602082019050919050565b6000602082019050818103600083015261265481612618565b9050919050565b7f496e73756666696369656e7420636f6d62696e65642066756e64730000000000600082015250565b6000612691601b83611c93565b915061269c8261265b565b602082019050919050565b600060208201905081810360008301526126c081612684565b9050919050565b60006060820190506126dc6000830186611e92565b6126e96020830185611e92565b6126f66040830184611d10565b949350505050565b60008151905061270d8161206e565b92915050565b600060208284031215612729576127286116c4565b5b6000612737848285016126fe565b91505092915050565b6040820160008201516127566000850182611d4f565b5060208201516127696020850182611d5e565b50505050565b60006080820190506127846000830186611e92565b6127916020830185611d10565b61279e6040830184612740565b949350505050565b600067ffffffffffffffff8211156127c1576127c0611838565b5b6127ca82611827565b9050602081019050919050565b60006127ea6127e5846127a6565b611898565b90508281526020810184848401111561280657612805611822565b5b612811848285611ca4565b509392505050565b600082601f83011261282e5761282d61181d565b5b815161283e8482602086016127d7565b91505092915050565b60006020828403121561285d5761285c6116c4565b5b600082015167ffffffffffffffff81111561287b5761287a6116c9565b5b61288784828501612819565b91505092915050565b6040820160008201516128a66000850182611d4f565b5060208201516128b96020850182611d5e565b50505050565b6040820160008201516128d56000850182611d4f565b5060208201516128e86020850182611d5e565b50505050565b6000610100820190506129046000830189611e92565b6129116020830188611e92565b61291e6040830187611d10565b61292b6060830186611d10565b6129386080830185612890565b61294560c08301846128bf565b979650505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006129ac602683611c93565b91506129b782612950565b604082019050919050565b600060208201905081810360008301526129db8161299f565b9050919050565b6000815190506129f1816117bb565b92915050565b600060208284031215612a0d57612a0c6116c4565b5b6000612a1b848285016129e2565b91505092915050565b6000604082019050612a396000830185611e92565b612a466020830184611e92565b9392505050565b7f596f75206d75737420626520746865206f776e6572206f7220617070726f766560008201527f6420746f20646f2074686973202e2e2e00000000000000000000000000000000602082015250565b6000612aa9603083611c93565b9150612ab482612a4d565b604082019050919050565b60006020820190508181036000830152612ad881612a9c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612b15602083611c93565b9150612b2082612adf565b602082019050919050565b60006020820190508181036000830152612b4481612b08565b905091905056fea2646970667358221220d99b19a113485ed277f0ba53428198cc2bea4cf5e1174e978972a52ee34ea89964736f6c63430008090033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
