/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CancelNFTListing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "minimumDuration",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "maximumEndTime",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "maximumEndTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "minimumDuration",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "NFTRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelNFTListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "maximumEndTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "minimumDuration",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "createTime",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "pricePerDay",
                type: "uint256",
              },
            ],
            internalType: "struct Payment",
            name: "payment",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct Collateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "minimumDuration",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "maximumEndTime",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "maximumEndTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "minimumDuration",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "rentNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "returnRentedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611841806101146000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101bf578063bc197c81146101ea578063f23a6e6114610227578063f2fde38b14610264578063f663c8a31461028d578063fead2cab146102b6576100a7565b806301ffc9a7146100ac578063150b7a02146100e957806341b0291214610126578063557469cd1461014f578063715018a61461016b57806388700d1c14610182575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce91906110aa565b6102e6565b6040516100e09190611402565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190610e95565b610360565b60405161011d919061141d565b60405180910390f35b34801561013257600080fd5b5061014d60048036038101906101489190610faf565b610374565b005b61016960048036038101906101649190610fef565b610383565b005b34801561017757600080fd5b50610180610423565b005b34801561018e57600080fd5b506101a960048036038101906101a49190610faf565b610437565b6040516101b691906114b8565b60405180910390f35b3480156101cb57600080fd5b506101d4610445565b6040516101e1919061134e565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c9190610d73565b61046e565b60405161021e919061141d565b60405180910390f35b34801561023357600080fd5b5061024e60048036038101906102499190610f18565b610483565b60405161025b919061141d565b60405180910390f35b34801561027057600080fd5b5061028b60048036038101906102869190610d19565b610498565b005b34801561029957600080fd5b506102b460048036038101906102af9190610fef565b61051c565b005b6102d060048036038101906102cb9190610e42565b6105c7565b6040516102dd91906114d4565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103595750610358826105d0565b5b9050919050565b600063150b7a0260e01b9050949350505050565b61037f33838361063a565b5050565b600260015414156103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c090611498565b60405180910390fd5b60026001819055507f1cb9dc17259bdbaa7ad588da81e2eb91b8dcefe6814b92df224f538d0eec53bf3387878787878760405161040c9796959493929190611392565b60405180910390a160018081905550505050505050565b61042b61088b565b6104356000610909565b565b61043f6109d5565b92915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b6104a061088b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050790611438565b60405180910390fd5b61051981610909565b50565b60026001541415610562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055990611498565b60405180910390fd5b600260018190555061057533878761063a565b7f1425b40b48a747b7033145f023e006ef4367f180f563c62f0fcbbcf55adfc555338787878787876040516105b09796959493929190611392565b60405180910390a160018081905550505050505050565b60009392505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161067591906114d4565b60206040518083038186803b15801561068d57600080fd5b505afa1580156106a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c59190610d46565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806107b457508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b815260040161074c91906114d4565b60206040518083038186803b15801561076457600080fd5b505afa158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c9190610d46565b73ffffffffffffffffffffffffffffffffffffffff16145b8061084657508273ffffffffffffffffffffffffffffffffffffffff1663e985e9c582866040518363ffffffff1660e01b81526004016107f5929190611369565b60206040518083038186803b15801561080d57600080fd5b505afa158015610821573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610845919061107d565b5b610885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087c90611458565b60405180910390fd5b50505050565b6108936109cd565b73ffffffffffffffffffffffffffffffffffffffff166108b1610445565b73ffffffffffffffffffffffffffffffffffffffff1614610907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fe90611478565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001610a7a610a8d565b8152602001610a87610abd565b81525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000610b00610afb84611514565b6114ef565b90508083825260208201905082856020860282011115610b2357610b22611683565b5b60005b85811015610b535781610b398882610cef565b845260208401935060208301925050600181019050610b26565b5050509392505050565b6000610b70610b6b84611540565b6114ef565b905082815260208101848484011115610b8c57610b8b611688565b5b610b9784828561160a565b509392505050565b600081359050610bae81611798565b92915050565b600081519050610bc381611798565b92915050565b600082601f830112610bde57610bdd611679565b5b8135610bee848260208601610aed565b91505092915050565b600081519050610c06816117af565b92915050565b600081359050610c1b816117c6565b92915050565b600082601f830112610c3657610c35611679565b5b8135610c46848260208601610b5d565b91505092915050565b600060408284031215610c6557610c6461167e565b5b610c6f60406114ef565b90506000610c7f84828501610b9f565b6000830152506020610c9384828501610cef565b60208301525092915050565b600060408284031215610cb557610cb461167e565b5b610cbf60406114ef565b90506000610ccf84828501610b9f565b6000830152506020610ce384828501610cef565b60208301525092915050565b600081359050610cfe816117dd565b92915050565b600081359050610d13816117f4565b92915050565b600060208284031215610d2f57610d2e611692565b5b6000610d3d84828501610b9f565b91505092915050565b600060208284031215610d5c57610d5b611692565b5b6000610d6a84828501610bb4565b91505092915050565b600080600080600060a08688031215610d8f57610d8e611692565b5b6000610d9d88828901610b9f565b9550506020610dae88828901610b9f565b945050604086013567ffffffffffffffff811115610dcf57610dce61168d565b5b610ddb88828901610bc9565b935050606086013567ffffffffffffffff811115610dfc57610dfb61168d565b5b610e0888828901610bc9565b925050608086013567ffffffffffffffff811115610e2957610e2861168d565b5b610e3588828901610c21565b9150509295509295909350565b600080600060608486031215610e5b57610e5a611692565b5b6000610e6986828701610b9f565b9350506020610e7a86828701610b9f565b9250506040610e8b86828701610cef565b9150509250925092565b60008060008060808587031215610eaf57610eae611692565b5b6000610ebd87828801610b9f565b9450506020610ece87828801610b9f565b9350506040610edf87828801610cef565b925050606085013567ffffffffffffffff811115610f0057610eff61168d565b5b610f0c87828801610c21565b91505092959194509250565b600080600080600060a08688031215610f3457610f33611692565b5b6000610f4288828901610b9f565b9550506020610f5388828901610b9f565b9450506040610f6488828901610cef565b9350506060610f7588828901610cef565b925050608086013567ffffffffffffffff811115610f9657610f9561168d565b5b610fa288828901610c21565b9150509295509295909350565b60008060408385031215610fc657610fc5611692565b5b6000610fd485828601610b9f565b9250506020610fe585828601610cef565b9150509250929050565b600080600080600080610100878903121561100d5761100c611692565b5b600061101b89828a01610b9f565b965050602061102c89828a01610cef565b955050604061103d89828a01610d04565b945050606061104e89828a01610d04565b935050608061105f89828a01610c9f565b92505060c061107089828a01610c4f565b9150509295509295509295565b60006020828403121561109357611092611692565b5b60006110a184828501610bf7565b91505092915050565b6000602082840312156110c0576110bf611692565b5b60006110ce84828501610c0c565b91505092915050565b6110e081611582565b82525050565b6110ef81611582565b82525050565b6110fe81611594565b82525050565b61110d816115a0565b82525050565b6000611120602683611571565b915061112b826116a8565b604082019050919050565b6000611143603083611571565b915061114e826116f7565b604082019050919050565b6000611166602083611571565b915061117182611746565b602082019050919050565b6000611189601f83611571565b91506111948261176f565b602082019050919050565b6040820160008201516111b560008501826110d7565b5060208201516111c86020850182611312565b50505050565b6040820160008201516111e460008501826110d7565b5060208201516111f76020850182611312565b50505050565b6101608201600082015161121460008501826110d7565b50602082015161122760208501826110d7565b50604082015161123a6040850182611312565b50606082015161124d6060850182611330565b5060808201516112606080850182611330565b5060a082015161127360a0850182611330565b5060c082015161128660c08501826110d7565b5060e082015161129960e08501826112b4565b506101008201516112ae61012085018261119f565b50505050565b6040820160008201516112ca60008501826110d7565b5060208201516112dd6020850182611312565b50505050565b6040820160008201516112f960008501826110d7565b50602082015161130c6020850182611312565b50505050565b61131b816115ec565b82525050565b61132a816115ec565b82525050565b611339816115f6565b82525050565b611348816115f6565b82525050565b600060208201905061136360008301846110e6565b92915050565b600060408201905061137e60008301856110e6565b61138b60208301846110e6565b9392505050565b6000610120820190506113a8600083018a6110e6565b6113b560208301896110e6565b6113c26040830188611321565b6113cf606083018761133f565b6113dc608083018661133f565b6113e960a08301856112e3565b6113f660e08301846111ce565b98975050505050505050565b600060208201905061141760008301846110f5565b92915050565b60006020820190506114326000830184611104565b92915050565b6000602082019050818103600083015261145181611113565b9050919050565b6000602082019050818103600083015261147181611136565b9050919050565b6000602082019050818103600083015261149181611159565b9050919050565b600060208201905081810360008301526114b18161117c565b9050919050565b6000610160820190506114ce60008301846111fd565b92915050565b60006020820190506114e96000830184611321565b92915050565b60006114f961150a565b90506115058282611619565b919050565b6000604051905090565b600067ffffffffffffffff82111561152f5761152e61164a565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561155b5761155a61164a565b5b61156482611697565b9050602081019050919050565b600082825260208201905092915050565b600061158d826115cc565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b61162282611697565b810181811067ffffffffffffffff821117156116415761164061164a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f596f75206d75737420626520746865206f776e6572206f7220617070726f766560008201527f6420746f20646f2074686973202e2e2e00000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6117a181611582565b81146117ac57600080fd5b50565b6117b881611594565b81146117c357600080fd5b50565b6117cf816115a0565b81146117da57600080fd5b50565b6117e6816115ec565b81146117f157600080fd5b50565b6117fd816115f6565b811461180857600080fd5b5056fea264697066735822122086d4ab69aa1d6e29e3f182a8af54a6450435dc5233317b38eca065b20fb6201464736f6c63430008070033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
