/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Rental",
        name: "rental",
        type: "tuple",
      },
    ],
    name: "NFTRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelNFTListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maximumEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "renter",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "expiryTime",
                type: "uint256",
              },
            ],
            internalType: "struct Rental",
            name: "rental",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "pricePerDay",
                type: "uint256",
              },
            ],
            internalType: "struct Payment",
            name: "payment",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct Collateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "returnRentedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611b63806101146000396000f3fe60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b14610198578063b9be0447146101c3578063bc197c81146101f3578063ed5cb47614610230578063f23a6e6114610259578063f2fde38b146102965761009c565b806301ffc9a7146100a1578063150b7a02146100de57806341b029121461011b578063715018a61461014457806388700d1c1461015b575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610f02565b6102bf565b6040516100d59190610f4a565b60405180910390f35b3480156100ea57600080fd5b506101056004803603810190610100919061113f565b610339565b60405161011291906111d1565b60405180910390f35b34801561012757600080fd5b50610142600480360381019061013d91906111ec565b61034d565b005b34801561015057600080fd5b50610159610363565b005b34801561016757600080fd5b50610182600480360381019061017d91906111ec565b610377565b60405161018f919061137a565b60405180910390f35b3480156101a457600080fd5b506101ad610609565b6040516101ba91906113a5565b60405180910390f35b6101dd60048036038101906101d891906111ec565b610632565b6040516101ea91906113cf565b60405180910390f35b3480156101ff57600080fd5b5061021a600480360381019061021591906114b2565b61063a565b60405161022791906111d1565b60405180910390f35b34801561023c57600080fd5b5061025760048036038101906102529190611626565b61064f565b005b34801561026557600080fd5b50610280600480360381019061027b91906116a1565b6108dd565b60405161028d91906111d1565b60405180910390f35b3480156102a257600080fd5b506102bd60048036038101906102b89190611738565b6108f2565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610332575061033182610976565b5b9050919050565b600063150b7a0260e01b9050949350505050565b61035f6103586109e0565b83836109e8565b5050565b61036b610c39565b6103756000610cb7565b565b61037f610d83565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600982016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081525050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600092915050565b600063bc197c8160e01b905095945050505050565b60026001541415610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c906117c2565b60405180910390fd5b60026001819055506106af6106a86109e0565b86866109e8565b60006106b96109e0565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000209050818160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160030181905550428160040181905550838160070160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050828160090160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050508673ffffffffffffffffffffffffffffffffffffffff166342842e0e8330896040518463ffffffff1660e01b8152600401610853939291906117e2565b600060405180830381600087803b15801561086d57600080fd5b505af1158015610881573d6000803e3d6000fd5b505050507f33375d78bcb09790857a4583927d3ac93d1f98336fa490a47304999668620f0d6108ae6109e0565b88888888886040516108c596959493929190611877565b60405180910390a15050600180819055505050505050565b600063f23a6e6160e01b905095945050505050565b6108fa610c39565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561096a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109619061194b565b60405180910390fd5b61097381610cb7565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610a2391906113cf565b60206040518083038186803b158015610a3b57600080fd5b505afa158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a739190611980565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b6257508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b8152600401610afa91906113cf565b60206040518083038186803b158015610b1257600080fd5b505afa158015610b26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4a9190611980565b73ffffffffffffffffffffffffffffffffffffffff16145b80610bf457508273ffffffffffffffffffffffffffffffffffffffff1663e985e9c582866040518363ffffffff1660e01b8152600401610ba39291906119ad565b60206040518083038186803b158015610bbb57600080fd5b505afa158015610bcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf39190611a02565b5b610c33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2a90611aa1565b60405180910390fd5b50505050565b610c41610d7b565b73ffffffffffffffffffffffffffffffffffffffff16610c5f610609565b73ffffffffffffffffffffffffffffffffffffffff1614610cb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cac90611b0d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001610de6610e06565b8152602001610df3610e36565b8152602001610e00610e66565b81525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610edf81610eaa565b8114610eea57600080fd5b50565b600081359050610efc81610ed6565b92915050565b600060208284031215610f1857610f17610ea0565b5b6000610f2684828501610eed565b91505092915050565b60008115159050919050565b610f4481610f2f565b82525050565b6000602082019050610f5f6000830184610f3b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f9082610f65565b9050919050565b610fa081610f85565b8114610fab57600080fd5b50565b600081359050610fbd81610f97565b92915050565b6000819050919050565b610fd681610fc3565b8114610fe157600080fd5b50565b600081359050610ff381610fcd565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61104c82611003565b810181811067ffffffffffffffff8211171561106b5761106a611014565b5b80604052505050565b600061107e610e96565b905061108a8282611043565b919050565b600067ffffffffffffffff8211156110aa576110a9611014565b5b6110b382611003565b9050602081019050919050565b82818337600083830152505050565b60006110e26110dd8461108f565b611074565b9050828152602081018484840111156110fe576110fd610ffe565b5b6111098482856110c0565b509392505050565b600082601f83011261112657611125610ff9565b5b81356111368482602086016110cf565b91505092915050565b6000806000806080858703121561115957611158610ea0565b5b600061116787828801610fae565b945050602061117887828801610fae565b935050604061118987828801610fe4565b925050606085013567ffffffffffffffff8111156111aa576111a9610ea5565b5b6111b687828801611111565b91505092959194509250565b6111cb81610eaa565b82525050565b60006020820190506111e660008301846111c2565b92915050565b6000806040838503121561120357611202610ea0565b5b600061121185828601610fae565b925050602061122285828601610fe4565b9150509250929050565b61123581610f85565b82525050565b61124481610fc3565b82525050565b604082016000820151611260600085018261122c565b506020820151611273602085018261123b565b50505050565b60408201600082015161128f600085018261122c565b5060208201516112a2602085018261123b565b50505050565b6040820160008201516112be600085018261122c565b5060208201516112d1602085018261123b565b50505050565b610160820160008201516112ee600085018261122c565b506020820151611301602085018261123b565b506040820151611314604085018261122c565b506060820151611327606085018261123b565b50608082015161133a608085018261123b565b5060a082015161134d60a085018261124a565b5060c082015161136060e0850182611279565b5060e08201516113746101208501826112a8565b50505050565b60006101608201905061139060008301846112d7565b92915050565b61139f81610f85565b82525050565b60006020820190506113ba6000830184611396565b92915050565b6113c981610fc3565b82525050565b60006020820190506113e460008301846113c0565b92915050565b600067ffffffffffffffff82111561140557611404611014565b5b602082029050602081019050919050565b600080fd5b600061142e611429846113ea565b611074565b9050808382526020820190506020840283018581111561145157611450611416565b5b835b8181101561147a57806114668882610fe4565b845260208401935050602081019050611453565b5050509392505050565b600082601f83011261149957611498610ff9565b5b81356114a984826020860161141b565b91505092915050565b600080600080600060a086880312156114ce576114cd610ea0565b5b60006114dc88828901610fae565b95505060206114ed88828901610fae565b945050604086013567ffffffffffffffff81111561150e5761150d610ea5565b5b61151a88828901611484565b935050606086013567ffffffffffffffff81111561153b5761153a610ea5565b5b61154788828901611484565b925050608086013567ffffffffffffffff81111561156857611567610ea5565b5b61157488828901611111565b9150509295509295909350565b600080fd5b60006040828403121561159c5761159b611581565b5b6115a66040611074565b905060006115b684828501610fae565b60008301525060206115ca84828501610fe4565b60208301525092915050565b6000604082840312156115ec576115eb611581565b5b6115f66040611074565b9050600061160684828501610fae565b600083015250602061161a84828501610fe4565b60208301525092915050565b600080600080600060e0868803121561164257611641610ea0565b5b600061165088828901610fae565b955050602061166188828901610fe4565b945050604061167288828901610fe4565b935050606061168388828901611586565b92505060a0611694888289016115d6565b9150509295509295909350565b600080600080600060a086880312156116bd576116bc610ea0565b5b60006116cb88828901610fae565b95505060206116dc88828901610fae565b94505060406116ed88828901610fe4565b93505060606116fe88828901610fe4565b925050608086013567ffffffffffffffff81111561171f5761171e610ea5565b5b61172b88828901611111565b9150509295509295909350565b60006020828403121561174e5761174d610ea0565b5b600061175c84828501610fae565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006117ac601f83611765565b91506117b782611776565b602082019050919050565b600060208201905081810360008301526117db8161179f565b9050919050565b60006060820190506117f76000830186611396565b6118046020830185611396565b61181160408301846113c0565b949350505050565b60408201600082015161182f600085018261122c565b506020820151611842602085018261123b565b50505050565b60408201600082015161185e600085018261122c565b506020820151611871602085018261123b565b50505050565b60006101008201905061188d6000830189611396565b61189a6020830188611396565b6118a760408301876113c0565b6118b460608301866113c0565b6118c16080830185611819565b6118ce60c0830184611848565b979650505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611935602683611765565b9150611940826118d9565b604082019050919050565b6000602082019050818103600083015261196481611928565b9050919050565b60008151905061197a81610f97565b92915050565b60006020828403121561199657611995610ea0565b5b60006119a48482850161196b565b91505092915050565b60006040820190506119c26000830185611396565b6119cf6020830184611396565b9392505050565b6119df81610f2f565b81146119ea57600080fd5b50565b6000815190506119fc816119d6565b92915050565b600060208284031215611a1857611a17610ea0565b5b6000611a26848285016119ed565b91505092915050565b7f596f75206d75737420626520746865206f776e6572206f7220617070726f766560008201527f6420746f20646f2074686973202e2e2e00000000000000000000000000000000602082015250565b6000611a8b603083611765565b9150611a9682611a2f565b604082019050919050565b60006020820190508181036000830152611aba81611a7e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611af7602083611765565b9150611b0282611ac1565b602082019050919050565b60006020820190508181036000830152611b2681611aea565b905091905056fea2646970667358221220db55f26844771115c29ae2049e970f5669d9e5943d2b126a2f0a548b02253e8764736f6c63430008090033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
