/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CancelNFTListing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Rental",
        name: "rental",
        type: "tuple",
      },
    ],
    name: "NFTRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelNFTListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maximumEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "renter",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "expiryTime",
                type: "uint256",
              },
            ],
            internalType: "struct Rental",
            name: "rental",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "pricePerDay",
                type: "uint256",
              },
            ],
            internalType: "struct Payment",
            name: "payment",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct Collateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "daysToRent",
        type: "uint16",
      },
    ],
    name: "rentNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "returnRentedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003f60201b60201c565b6200004760201b60201c565b600180819055506200010b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612b61806200011b6000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101bf578063b9be0447146101ea578063bc197c811461021a578063ed5cb47614610257578063f23a6e6114610280578063f2fde38b146102bd576100a7565b806301ffc9a7146100ac578063150b7a02146100e957806341b02912146101265780636b93a54e1461014f578063715018a61461016b57806388700d1c14610182575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce91906119ad565b6102e6565b6040516100e091906119f5565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190611bea565b610360565b60405161011d9190611c7c565b60405180910390f35b34801561013257600080fd5b5061014d60048036038101906101489190611c97565b610374565b005b61016960048036038101906101649190611d11565b61038a565b005b34801561017757600080fd5b50610180610e94565b005b34801561018e57600080fd5b506101a960048036038101906101a49190611c97565b610ea8565b6040516101b69190611e8b565b60405180910390f35b3480156101cb57600080fd5b506101d46110d9565b6040516101e19190611eb6565b60405180910390f35b61020460048036038101906101ff9190611c97565b611102565b6040516102119190611ee0565b60405180910390f35b34801561022657600080fd5b50610241600480360381019061023c9190611fc3565b61110a565b60405161024e9190611c7c565b60405180910390f35b34801561026357600080fd5b5061027e60048036038101906102799190612137565b61111f565b005b34801561028c57600080fd5b506102a760048036038101906102a291906121b2565b6113ad565b6040516102b49190611c7c565b60405180910390f35b3480156102c957600080fd5b506102e460048036038101906102df9190612249565b6113c2565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610359575061035882611446565b5b9050919050565b600063150b7a0260e01b9050949350505050565b61038661037f6114b0565b83836114b8565b5050565b600260015414156103d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c7906122d3565b60405180910390fd5b60026001819055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815250509050600042620151808461ffff166106139190612331565b62ffffff16610622919061236e565b905060008260400151141561066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390612410565b60405180910390fd5b60008361ffff16116106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa906124a2565b60405180910390fd5b81602001518111156106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f19061250e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1682606001516000015173ffffffffffffffffffffffffffffffffffffffff1614801561074657506000826060015160200151145b610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c9061257a565b60405180910390fd5b6000826080015160000151905060008360a0015160000151905060008460800151602001518661ffff166107b9919061259a565b9050808373ffffffffffffffffffffffffffffffffffffffff166370a082316107e06114b0565b6040518263ffffffff1660e01b81526004016107fc9190611eb6565b60206040518083038186803b15801561081457600080fd5b505afa158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c9190612609565b101561088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088490612682565b60405180910390fd5b8460a00151602001518273ffffffffffffffffffffffffffffffffffffffff166370a082316108ba6114b0565b6040518263ffffffff1660e01b81526004016108d69190611eb6565b60206040518083038186803b1580156108ee57600080fd5b505afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109269190612609565b1015610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095e906126ee565b60405180910390fd5b8460a001516000015173ffffffffffffffffffffffffffffffffffffffff1685608001516000015173ffffffffffffffffffffffffffffffffffffffff161415610a975760008560a0015160200151826109c1919061236e565b9050808473ffffffffffffffffffffffffffffffffffffffff166370a082316109e86114b0565b6040518263ffffffff1660e01b8152600401610a049190611eb6565b60206040518083038186803b158015610a1c57600080fd5b505afa158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a549190612609565b1015610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c9061275a565b60405180910390fd5b505b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd610abb6114b0565b308860a00151602001516040518463ffffffff1660e01b8152600401610ae39392919061277a565b602060405180830381600087803b158015610afd57600080fd5b505af1158015610b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3591906127dd565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd610b5a6114b0565b8760000151846040518463ffffffff1660e01b8152600401610b7e9392919061277a565b602060405180830381600087803b158015610b9857600080fd5b505af1158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd091906127dd565b508773ffffffffffffffffffffffffffffffffffffffff166342842e0e30610bf66114b0565b8a6040518463ffffffff1660e01b8152600401610c159392919061277a565b600060405180830381600087803b158015610c2f57600080fd5b505af1158015610c43573d6000803e3d6000fd5b505050506040518060400160405280610c5a6114b0565b73ffffffffffffffffffffffffffffffffffffffff16815260200185815250856060018190525084600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060808201518160050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a08201518160070160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550509050507fd5f86e4b4526d796a88ce410e7a72c3b2599bab2c0f9d0acef0ddf0cd44ca6a188888760600151604051610e7b93929190612839565b60405180910390a1505050505060018081905550505050565b610e9c611709565b610ea66000611787565b565b610eb0611853565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081525050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600092915050565b600063bc197c8160e01b905095945050505050565b60026001541415611165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115c906122d3565b60405180910390fd5b600260018190555061117f6111786114b0565b86866114b8565b60006111896114b0565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160010181905550428160020181905550838160050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050828160070160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050508673ffffffffffffffffffffffffffffffffffffffff166342842e0e8330896040518463ffffffff1660e01b81526004016113239392919061277a565b600060405180830381600087803b15801561133d57600080fd5b505af1158015611351573d6000803e3d6000fd5b505050507f33375d78bcb09790857a4583927d3ac93d1f98336fa490a47304999668620f0d61137e6114b0565b8888888888604051611395969594939291906128ce565b60405180910390a15050600180819055505050505050565b600063f23a6e6160e01b905095945050505050565b6113ca611709565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561143a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611431906129a2565b60405180910390fd5b61144381611787565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016114f39190611ee0565b60206040518083038186803b15801561150b57600080fd5b505afa15801561151f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154391906129d7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061163257508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b81526004016115ca9190611ee0565b60206040518083038186803b1580156115e257600080fd5b505afa1580156115f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161a91906129d7565b73ffffffffffffffffffffffffffffffffffffffff16145b806116c457508273ffffffffffffffffffffffffffffffffffffffff1663e985e9c582866040518363ffffffff1660e01b8152600401611673929190612a04565b60206040518083038186803b15801561168b57600080fd5b505afa15801561169f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c391906127dd565b5b611703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116fa90612a9f565b60405180910390fd5b50505050565b61171161184b565b73ffffffffffffffffffffffffffffffffffffffff1661172f6110d9565b73ffffffffffffffffffffffffffffffffffffffff1614611785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177c90612b0b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016118916118b1565b815260200161189e6118e1565b81526020016118ab611911565b81525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61198a81611955565b811461199557600080fd5b50565b6000813590506119a781611981565b92915050565b6000602082840312156119c3576119c261194b565b5b60006119d184828501611998565b91505092915050565b60008115159050919050565b6119ef816119da565b82525050565b6000602082019050611a0a60008301846119e6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a3b82611a10565b9050919050565b611a4b81611a30565b8114611a5657600080fd5b50565b600081359050611a6881611a42565b92915050565b6000819050919050565b611a8181611a6e565b8114611a8c57600080fd5b50565b600081359050611a9e81611a78565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611af782611aae565b810181811067ffffffffffffffff82111715611b1657611b15611abf565b5b80604052505050565b6000611b29611941565b9050611b358282611aee565b919050565b600067ffffffffffffffff821115611b5557611b54611abf565b5b611b5e82611aae565b9050602081019050919050565b82818337600083830152505050565b6000611b8d611b8884611b3a565b611b1f565b905082815260208101848484011115611ba957611ba8611aa9565b5b611bb4848285611b6b565b509392505050565b600082601f830112611bd157611bd0611aa4565b5b8135611be1848260208601611b7a565b91505092915050565b60008060008060808587031215611c0457611c0361194b565b5b6000611c1287828801611a59565b9450506020611c2387828801611a59565b9350506040611c3487828801611a8f565b925050606085013567ffffffffffffffff811115611c5557611c54611950565b5b611c6187828801611bbc565b91505092959194509250565b611c7681611955565b82525050565b6000602082019050611c916000830184611c6d565b92915050565b60008060408385031215611cae57611cad61194b565b5b6000611cbc85828601611a59565b9250506020611ccd85828601611a8f565b9150509250929050565b600061ffff82169050919050565b611cee81611cd7565b8114611cf957600080fd5b50565b600081359050611d0b81611ce5565b92915050565b600080600060608486031215611d2a57611d2961194b565b5b6000611d3886828701611a59565b9350506020611d4986828701611a8f565b9250506040611d5a86828701611cfc565b9150509250925092565b611d6d81611a30565b82525050565b611d7c81611a6e565b82525050565b604082016000820151611d986000850182611d64565b506020820151611dab6020850182611d73565b50505050565b604082016000820151611dc76000850182611d64565b506020820151611dda6020850182611d73565b50505050565b604082016000820151611df66000850182611d64565b506020820151611e096020850182611d73565b50505050565b61012082016000820151611e266000850182611d64565b506020820151611e396020850182611d73565b506040820151611e4c6040850182611d73565b506060820151611e5f6060850182611d82565b506080820151611e7260a0850182611db1565b5060a0820151611e8560e0850182611de0565b50505050565b600061012082019050611ea16000830184611e0f565b92915050565b611eb081611a30565b82525050565b6000602082019050611ecb6000830184611ea7565b92915050565b611eda81611a6e565b82525050565b6000602082019050611ef56000830184611ed1565b92915050565b600067ffffffffffffffff821115611f1657611f15611abf565b5b602082029050602081019050919050565b600080fd5b6000611f3f611f3a84611efb565b611b1f565b90508083825260208201905060208402830185811115611f6257611f61611f27565b5b835b81811015611f8b5780611f778882611a8f565b845260208401935050602081019050611f64565b5050509392505050565b600082601f830112611faa57611fa9611aa4565b5b8135611fba848260208601611f2c565b91505092915050565b600080600080600060a08688031215611fdf57611fde61194b565b5b6000611fed88828901611a59565b9550506020611ffe88828901611a59565b945050604086013567ffffffffffffffff81111561201f5761201e611950565b5b61202b88828901611f95565b935050606086013567ffffffffffffffff81111561204c5761204b611950565b5b61205888828901611f95565b925050608086013567ffffffffffffffff81111561207957612078611950565b5b61208588828901611bbc565b9150509295509295909350565b600080fd5b6000604082840312156120ad576120ac612092565b5b6120b76040611b1f565b905060006120c784828501611a59565b60008301525060206120db84828501611a8f565b60208301525092915050565b6000604082840312156120fd576120fc612092565b5b6121076040611b1f565b9050600061211784828501611a59565b600083015250602061212b84828501611a8f565b60208301525092915050565b600080600080600060e086880312156121535761215261194b565b5b600061216188828901611a59565b955050602061217288828901611a8f565b945050604061218388828901611a8f565b935050606061219488828901612097565b92505060a06121a5888289016120e7565b9150509295509295909350565b600080600080600060a086880312156121ce576121cd61194b565b5b60006121dc88828901611a59565b95505060206121ed88828901611a59565b94505060406121fe88828901611a8f565b935050606061220f88828901611a8f565b925050608086013567ffffffffffffffff8111156122305761222f611950565b5b61223c88828901611bbc565b9150509295509295909350565b60006020828403121561225f5761225e61194b565b5b600061226d84828501611a59565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006122bd601f83612276565b91506122c882612287565b602082019050919050565b600060208201905081810360008301526122ec816122b0565b9050919050565b600062ffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061233c826122f3565b9150612347836122f3565b92508162ffffff048311821515161561236357612362612302565b5b828202905092915050565b600061237982611a6e565b915061238483611a6e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123b9576123b8612302565b5b828201905092915050565b7f54686973206c697374696e6720646f6573206e6f742065786973740000000000600082015250565b60006123fa601b83612276565b9150612405826123c4565b602082019050919050565b60006020820190508181036000830152612429816123ed565b9050919050565b7f5468652072656e74616c20706572696f64206d7573742062652067726561746560008201527f72207468616e2030206461797300000000000000000000000000000000000000602082015250565b600061248c602d83612276565b915061249782612430565b604082019050919050565b600060208201905081810360008301526124bb8161247f565b9050919050565b7f52656e74616c2074696d656672616d6520746f6f206c6f6e672e000000000000600082015250565b60006124f8601a83612276565b9150612503826124c2565b602082019050919050565b60006020820190508181036000830152612527816124eb565b9050919050565b7f54686973206974656d20697320616c72656164792072656e7465642e00000000600082015250565b6000612564601c83612276565b915061256f8261252e565b602082019050919050565b6000602082019050818103600083015261259381612557565b9050919050565b60006125a582611a6e565b91506125b083611a6e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156125e9576125e8612302565b5b828202905092915050565b60008151905061260381611a78565b92915050565b60006020828403121561261f5761261e61194b565b5b600061262d848285016125f4565b91505092915050565b7f496e73756666696369656e74207061796d656e742066756e6473000000000000600082015250565b600061266c601a83612276565b915061267782612636565b602082019050919050565b6000602082019050818103600083015261269b8161265f565b9050919050565b7f496e73756666696369656e7420636f6c6c61746572616c2066756e6473000000600082015250565b60006126d8601d83612276565b91506126e3826126a2565b602082019050919050565b60006020820190508181036000830152612707816126cb565b9050919050565b7f496e73756666696369656e7420636f6d62696e65642066756e64730000000000600082015250565b6000612744601b83612276565b915061274f8261270e565b602082019050919050565b6000602082019050818103600083015261277381612737565b9050919050565b600060608201905061278f6000830186611ea7565b61279c6020830185611ea7565b6127a96040830184611ed1565b949350505050565b6127ba816119da565b81146127c557600080fd5b50565b6000815190506127d7816127b1565b92915050565b6000602082840312156127f3576127f261194b565b5b6000612801848285016127c8565b91505092915050565b6040820160008201516128206000850182611d64565b5060208201516128336020850182611d73565b50505050565b600060808201905061284e6000830186611ea7565b61285b6020830185611ed1565b612868604083018461280a565b949350505050565b6040820160008201516128866000850182611d64565b5060208201516128996020850182611d73565b50505050565b6040820160008201516128b56000850182611d64565b5060208201516128c86020850182611d73565b50505050565b6000610100820190506128e46000830189611ea7565b6128f16020830188611ea7565b6128fe6040830187611ed1565b61290b6060830186611ed1565b6129186080830185612870565b61292560c083018461289f565b979650505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061298c602683612276565b915061299782612930565b604082019050919050565b600060208201905081810360008301526129bb8161297f565b9050919050565b6000815190506129d181611a42565b92915050565b6000602082840312156129ed576129ec61194b565b5b60006129fb848285016129c2565b91505092915050565b6000604082019050612a196000830185611ea7565b612a266020830184611ea7565b9392505050565b7f596f75206d75737420626520746865206f776e6572206f7220617070726f766560008201527f6420746f20646f2074686973202e2e2e00000000000000000000000000000000602082015250565b6000612a89603083612276565b9150612a9482612a2d565b604082019050919050565b60006020820190508181036000830152612ab881612a7c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612af5602083612276565b9150612b0082612abf565b602082019050919050565b60006020820190508181036000830152612b2481612ae8565b905091905056fea2646970667358221220738840cbb9d3e2a28d7d5a1c19a5faea4c66fe6521a092abfda4d01a44fb3fb764736f6c63430008090033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
