/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CancelNFTListing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Rental",
        name: "rental",
        type: "tuple",
      },
    ],
    name: "NFTRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelNFTListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maximumEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "renter",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "expiryTime",
                type: "uint256",
              },
            ],
            internalType: "struct Rental",
            name: "rental",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "pricePerDay",
                type: "uint256",
              },
            ],
            internalType: "struct Payment",
            name: "payment",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct Collateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "daysToRent",
        type: "uint16",
      },
    ],
    name: "rentNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "returnRentedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003f60201b60201c565b6200004760201b60201c565b600180819055506200010b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612b68806200011b6000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101bf578063b9be0447146101ea578063bc197c811461021a578063ed5cb47614610257578063f23a6e6114610280578063f2fde38b146102bd576100a7565b806301ffc9a7146100ac578063150b7a02146100e957806341b02912146101265780636b93a54e1461014f578063715018a61461016b57806388700d1c14610182575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190611f00565b6102e6565b6040516100e091906123df565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190611cab565b610360565b60405161011d91906123fa565b60405180910390f35b34801561013257600080fd5b5061014d60048036038101906101489190611dc5565b610374565b005b61016960048036038101906101649190611e05565b61038a565b005b34801561017757600080fd5b50610180610e94565b005b34801561018e57600080fd5b506101a960048036038101906101a49190611dc5565b610ea8565b6040516101b69190612575565b60405180910390f35b3480156101cb57600080fd5b506101d46110d9565b6040516101e191906122cb565b60405180910390f35b61020460048036038101906101ff9190611dc5565b611102565b6040516102119190612591565b60405180910390f35b34801561022657600080fd5b50610241600480360381019061023c9190611bdc565b61110a565b60405161024e91906123fa565b60405180910390f35b34801561026357600080fd5b5061027e60048036038101906102799190611e58565b61111f565b005b34801561028c57600080fd5b506102a760048036038101906102a29190611d2e565b6113ad565b6040516102b491906123fa565b60405180910390f35b3480156102c957600080fd5b506102e460048036038101906102df9190611b82565b6113c2565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610359575061035882611446565b5b9050919050565b600063150b7a0260e01b9050949350505050565b61038661037f6114b0565b83836114b8565b5050565b600260015414156103d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c790612535565b60405180910390fd5b60026001819055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815250509050600042620151808461ffff166106139190612695565b62ffffff16610622919061263f565b905060008260400151141561066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390612455565b60405180910390fd5b60008361ffff16116106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa906124d5565b60405180910390fd5b81602001518111156106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f190612475565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1682606001516000015173ffffffffffffffffffffffffffffffffffffffff1614801561074657506000826060015160200151145b610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c90612515565b60405180910390fd5b6000826080015160000151905060008360a0015160000151905060008460800151602001518661ffff166107b991906126d2565b9050808373ffffffffffffffffffffffffffffffffffffffff166370a082316107e06114b0565b6040518263ffffffff1660e01b81526004016107fc91906122cb565b60206040518083038186803b15801561081457600080fd5b505afa158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c9190611f2d565b101561088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088490612415565b60405180910390fd5b8460a00151602001518273ffffffffffffffffffffffffffffffffffffffff166370a082316108ba6114b0565b6040518263ffffffff1660e01b81526004016108d691906122cb565b60206040518083038186803b1580156108ee57600080fd5b505afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109269190611f2d565b1015610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095e90612495565b60405180910390fd5b8460a001516000015173ffffffffffffffffffffffffffffffffffffffff1685608001516000015173ffffffffffffffffffffffffffffffffffffffff161415610a975760008560a0015160200151826109c1919061263f565b9050808473ffffffffffffffffffffffffffffffffffffffff166370a082316109e86114b0565b6040518263ffffffff1660e01b8152600401610a0491906122cb565b60206040518083038186803b158015610a1c57600080fd5b505afa158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a549190611f2d565b1015610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90612555565b60405180910390fd5b505b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd610abb6114b0565b308860a00151602001516040518463ffffffff1660e01b8152600401610ae39392919061230f565b602060405180830381600087803b158015610afd57600080fd5b505af1158015610b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b359190611ed3565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd610b5a6114b0565b8760000151846040518463ffffffff1660e01b8152600401610b7e9392919061230f565b602060405180830381600087803b158015610b9857600080fd5b505af1158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd09190611ed3565b508773ffffffffffffffffffffffffffffffffffffffff166342842e0e30610bf66114b0565b8a6040518463ffffffff1660e01b8152600401610c159392919061230f565b600060405180830381600087803b158015610c2f57600080fd5b505af1158015610c43573d6000803e3d6000fd5b505050506040518060400160405280610c5a6114b0565b73ffffffffffffffffffffffffffffffffffffffff16815260200185815250856060018190525084600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060808201518160050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a08201518160070160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550509050507fd5f86e4b4526d796a88ce410e7a72c3b2599bab2c0f9d0acef0ddf0cd44ca6a188888760600151604051610e7b939291906123a8565b60405180910390a1505050505060018081905550505050565b610e9c611709565b610ea66000611787565b565b610eb0611853565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081525050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600092915050565b600063bc197c8160e01b905095945050505050565b60026001541415611165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115c90612535565b60405180910390fd5b600260018190555061117f6111786114b0565b86866114b8565b60006111896114b0565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160010181905550428160020181905550838160050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050828160070160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050508673ffffffffffffffffffffffffffffffffffffffff166342842e0e8330896040518463ffffffff1660e01b81526004016113239392919061230f565b600060405180830381600087803b15801561133d57600080fd5b505af1158015611351573d6000803e3d6000fd5b505050507f33375d78bcb09790857a4583927d3ac93d1f98336fa490a47304999668620f0d61137e6114b0565b888888888860405161139596959493929190612346565b60405180910390a15050600180819055505050505050565b600063f23a6e6160e01b905095945050505050565b6113ca611709565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561143a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143190612435565b60405180910390fd5b61144381611787565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016114f39190612591565b60206040518083038186803b15801561150b57600080fd5b505afa15801561151f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115439190611baf565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061163257508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b81526004016115ca9190612591565b60206040518083038186803b1580156115e257600080fd5b505afa1580156115f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161a9190611baf565b73ffffffffffffffffffffffffffffffffffffffff16145b806116c457508273ffffffffffffffffffffffffffffffffffffffff1663e985e9c582866040518363ffffffff1660e01b81526004016116739291906122e6565b60206040518083038186803b15801561168b57600080fd5b505afa15801561169f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c39190611ed3565b5b611703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116fa906124b5565b60405180910390fd5b50505050565b61171161184b565b73ffffffffffffffffffffffffffffffffffffffff1661172f6110d9565b73ffffffffffffffffffffffffffffffffffffffff1614611785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177c906124f5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016118916118b1565b815260200161189e6118e1565b81526020016118ab611911565b81525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600061195461194f846125d1565b6125ac565b9050808382526020820190508285602086028201111561197757611976612865565b5b60005b858110156119a7578161198d8882611b58565b84526020840193506020830192505060018101905061197a565b5050509392505050565b60006119c46119bf846125fd565b6125ac565b9050828152602081018484840111156119e0576119df61286a565b5b6119eb8482856127bd565b509392505050565b600081359050611a0281612abf565b92915050565b600081519050611a1781612abf565b92915050565b600082601f830112611a3257611a3161285b565b5b8135611a42848260208601611941565b91505092915050565b600081519050611a5a81612ad6565b92915050565b600081359050611a6f81612aed565b92915050565b600082601f830112611a8a57611a8961285b565b5b8135611a9a8482602086016119b1565b91505092915050565b600060408284031215611ab957611ab8612860565b5b611ac360406125ac565b90506000611ad3848285016119f3565b6000830152506020611ae784828501611b58565b60208301525092915050565b600060408284031215611b0957611b08612860565b5b611b1360406125ac565b90506000611b23848285016119f3565b6000830152506020611b3784828501611b58565b60208301525092915050565b600081359050611b5281612b04565b92915050565b600081359050611b6781612b1b565b92915050565b600081519050611b7c81612b1b565b92915050565b600060208284031215611b9857611b97612874565b5b6000611ba6848285016119f3565b91505092915050565b600060208284031215611bc557611bc4612874565b5b6000611bd384828501611a08565b91505092915050565b600080600080600060a08688031215611bf857611bf7612874565b5b6000611c06888289016119f3565b9550506020611c17888289016119f3565b945050604086013567ffffffffffffffff811115611c3857611c3761286f565b5b611c4488828901611a1d565b935050606086013567ffffffffffffffff811115611c6557611c6461286f565b5b611c7188828901611a1d565b925050608086013567ffffffffffffffff811115611c9257611c9161286f565b5b611c9e88828901611a75565b9150509295509295909350565b60008060008060808587031215611cc557611cc4612874565b5b6000611cd3878288016119f3565b9450506020611ce4878288016119f3565b9350506040611cf587828801611b58565b925050606085013567ffffffffffffffff811115611d1657611d1561286f565b5b611d2287828801611a75565b91505092959194509250565b600080600080600060a08688031215611d4a57611d49612874565b5b6000611d58888289016119f3565b9550506020611d69888289016119f3565b9450506040611d7a88828901611b58565b9350506060611d8b88828901611b58565b925050608086013567ffffffffffffffff811115611dac57611dab61286f565b5b611db888828901611a75565b9150509295509295909350565b60008060408385031215611ddc57611ddb612874565b5b6000611dea858286016119f3565b9250506020611dfb85828601611b58565b9150509250929050565b600080600060608486031215611e1e57611e1d612874565b5b6000611e2c868287016119f3565b9350506020611e3d86828701611b58565b9250506040611e4e86828701611b43565b9150509250925092565b600080600080600060e08688031215611e7457611e73612874565b5b6000611e82888289016119f3565b9550506020611e9388828901611b58565b9450506040611ea488828901611b58565b9350506060611eb588828901611af3565b92505060a0611ec688828901611aa3565b9150509295509295909350565b600060208284031215611ee957611ee8612874565b5b6000611ef784828501611a4b565b91505092915050565b600060208284031215611f1657611f15612874565b5b6000611f2484828501611a60565b91505092915050565b600060208284031215611f4357611f42612874565b5b6000611f5184828501611b6d565b91505092915050565b611f638161272c565b82525050565b611f728161272c565b82525050565b611f818161273e565b82525050565b611f908161274a565b82525050565b6000611fa3601a8361262e565b9150611fae8261288a565b602082019050919050565b6000611fc660268361262e565b9150611fd1826128b3565b604082019050919050565b6000611fe9601b8361262e565b9150611ff482612902565b602082019050919050565b600061200c601a8361262e565b91506120178261292b565b602082019050919050565b600061202f601d8361262e565b915061203a82612954565b602082019050919050565b600061205260308361262e565b915061205d8261297d565b604082019050919050565b6000612075602d8361262e565b9150612080826129cc565b604082019050919050565b600061209860208361262e565b91506120a382612a1b565b602082019050919050565b60006120bb601c8361262e565b91506120c682612a44565b602082019050919050565b60006120de601f8361262e565b91506120e982612a6d565b602082019050919050565b6000612101601b8361262e565b915061210c82612a96565b602082019050919050565b60408201600082015161212d6000850182611f5a565b50602082015161214060208501826122ad565b50505050565b60408201600082015161215c6000850182611f5a565b50602082015161216f60208501826122ad565b50505050565b6101208201600082015161218c6000850182611f5a565b50602082015161219f60208501826122ad565b5060408201516121b260408501826122ad565b5060608201516121c5606085018261224f565b5060808201516121d860a08501826121f1565b5060a08201516121eb60e0850182612117565b50505050565b6040820160008201516122076000850182611f5a565b50602082015161221a60208501826122ad565b50505050565b6040820160008201516122366000850182611f5a565b50602082015161224960208501826122ad565b50505050565b6040820160008201516122656000850182611f5a565b50602082015161227860208501826122ad565b50505050565b6040820160008201516122946000850182611f5a565b5060208201516122a760208501826122ad565b50505050565b6122b6816127b3565b82525050565b6122c5816127b3565b82525050565b60006020820190506122e06000830184611f69565b92915050565b60006040820190506122fb6000830185611f69565b6123086020830184611f69565b9392505050565b60006060820190506123246000830186611f69565b6123316020830185611f69565b61233e60408301846122bc565b949350505050565b60006101008201905061235c6000830189611f69565b6123696020830188611f69565b61237660408301876122bc565b61238360608301866122bc565b6123906080830185612220565b61239d60c0830184612146565b979650505050505050565b60006080820190506123bd6000830186611f69565b6123ca60208301856122bc565b6123d7604083018461227e565b949350505050565b60006020820190506123f46000830184611f78565b92915050565b600060208201905061240f6000830184611f87565b92915050565b6000602082019050818103600083015261242e81611f96565b9050919050565b6000602082019050818103600083015261244e81611fb9565b9050919050565b6000602082019050818103600083015261246e81611fdc565b9050919050565b6000602082019050818103600083015261248e81611fff565b9050919050565b600060208201905081810360008301526124ae81612022565b9050919050565b600060208201905081810360008301526124ce81612045565b9050919050565b600060208201905081810360008301526124ee81612068565b9050919050565b6000602082019050818103600083015261250e8161208b565b9050919050565b6000602082019050818103600083015261252e816120ae565b9050919050565b6000602082019050818103600083015261254e816120d1565b9050919050565b6000602082019050818103600083015261256e816120f4565b9050919050565b60006101208201905061258b6000830184612175565b92915050565b60006020820190506125a660008301846122bc565b92915050565b60006125b66125c7565b90506125c282826127cc565b919050565b6000604051905090565b600067ffffffffffffffff8211156125ec576125eb61282c565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156126185761261761282c565b5b61262182612879565b9050602081019050919050565b600082825260208201905092915050565b600061264a826127b3565b9150612655836127b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561268a576126896127fd565b5b828201905092915050565b60006126a0826127a4565b91506126ab836127a4565b92508162ffffff04831182151516156126c7576126c66127fd565b5b828202905092915050565b60006126dd826127b3565b91506126e8836127b3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612721576127206127fd565b5b828202905092915050565b600061273782612784565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6127d582612879565b810181811067ffffffffffffffff821117156127f4576127f361282c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f496e73756666696369656e74207061796d656e742066756e6473000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f54686973206c697374696e6720646f6573206e6f742065786973740000000000600082015250565b7f52656e74616c2074696d656672616d6520746f6f206c6f6e672e000000000000600082015250565b7f496e73756666696369656e7420636f6c6c61746572616c2066756e6473000000600082015250565b7f596f75206d75737420626520746865206f776e6572206f7220617070726f766560008201527f6420746f20646f2074686973202e2e2e00000000000000000000000000000000602082015250565b7f5468652072656e74616c20706572696f64206d7573742062652067726561746560008201527f72207468616e2030206461797300000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f54686973206974656d20697320616c72656164792072656e7465642e00000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f496e73756666696369656e7420636f6d62696e65642066756e64730000000000600082015250565b612ac88161272c565b8114612ad357600080fd5b50565b612adf8161273e565b8114612aea57600080fd5b50565b612af68161274a565b8114612b0157600080fd5b50565b612b0d81612776565b8114612b1857600080fd5b50565b612b24816127b3565b8114612b2f57600080fd5b5056fea2646970667358221220ee33e6ccebf14a3e5339909717ef7c0ed2604a9740ccafd559b9ed38709601ae64736f6c63430008070033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
