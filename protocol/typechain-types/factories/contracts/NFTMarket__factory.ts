/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Rental",
        name: "rental",
        type: "tuple",
      },
    ],
    name: "NFTRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelNFTListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maximumEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "renter",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "expiryTime",
                type: "uint256",
              },
            ],
            internalType: "struct Rental",
            name: "rental",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "pricePerDay",
                type: "uint256",
              },
            ],
            internalType: "struct Payment",
            name: "payment",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct Collateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "returnRentedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611ab6806101146000396000f3fe60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b14610198578063b9be0447146101c3578063bc197c81146101f3578063ed5cb47614610230578063f23a6e6114610259578063f2fde38b146102965761009c565b806301ffc9a7146100a1578063150b7a02146100de57806341b029121461011b578063715018a61461014457806388700d1c1461015b575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610e7c565b6102bf565b6040516100d59190610ec4565b60405180910390f35b3480156100ea57600080fd5b50610105600480360381019061010091906110b9565b610339565b604051610112919061114b565b60405180910390f35b34801561012757600080fd5b50610142600480360381019061013d9190611166565b61034d565b005b34801561015057600080fd5b50610159610363565b005b34801561016757600080fd5b50610182600480360381019061017d9190611166565b610377565b60405161018f91906112cd565b60405180910390f35b3480156101a457600080fd5b506101ad6105a8565b6040516101ba91906112f8565b60405180910390f35b6101dd60048036038101906101d89190611166565b6105d1565b6040516101ea9190611322565b60405180910390f35b3480156101ff57600080fd5b5061021a60048036038101906102159190611405565b6105d9565b604051610227919061114b565b60405180910390f35b34801561023c57600080fd5b5061025760048036038101906102529190611579565b6105ee565b005b34801561026557600080fd5b50610280600480360381019061027b91906115f4565b61087c565b60405161028d919061114b565b60405180910390f35b3480156102a257600080fd5b506102bd60048036038101906102b8919061168b565b610891565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610332575061033182610915565b5b9050919050565b600063150b7a0260e01b9050949350505050565b61035f61035861097f565b8383610987565b5050565b61036b610bd8565b6103756000610c56565b565b61037f610d22565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081525050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600092915050565b600063bc197c8160e01b905095945050505050565b60026001541415610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b90611715565b60405180910390fd5b600260018190555061064e61064761097f565b8686610987565b600061065861097f565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160010181905550428160020181905550838160050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050828160070160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050508673ffffffffffffffffffffffffffffffffffffffff166342842e0e8330896040518463ffffffff1660e01b81526004016107f293929190611735565b600060405180830381600087803b15801561080c57600080fd5b505af1158015610820573d6000803e3d6000fd5b505050507f33375d78bcb09790857a4583927d3ac93d1f98336fa490a47304999668620f0d61084d61097f565b8888888888604051610864969594939291906117ca565b60405180910390a15050600180819055505050505050565b600063f23a6e6160e01b905095945050505050565b610899610bd8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610909576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109009061189e565b60405180910390fd5b61091281610c56565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016109c29190611322565b60206040518083038186803b1580156109da57600080fd5b505afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906118d3565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b0157508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b8152600401610a999190611322565b60206040518083038186803b158015610ab157600080fd5b505afa158015610ac5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae991906118d3565b73ffffffffffffffffffffffffffffffffffffffff16145b80610b9357508273ffffffffffffffffffffffffffffffffffffffff1663e985e9c582866040518363ffffffff1660e01b8152600401610b42929190611900565b60206040518083038186803b158015610b5a57600080fd5b505afa158015610b6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b929190611955565b5b610bd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc9906119f4565b60405180910390fd5b50505050565b610be0610d1a565b73ffffffffffffffffffffffffffffffffffffffff16610bfe6105a8565b73ffffffffffffffffffffffffffffffffffffffff1614610c54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4b90611a60565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001610d60610d80565b8152602001610d6d610db0565b8152602001610d7a610de0565b81525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e5981610e24565b8114610e6457600080fd5b50565b600081359050610e7681610e50565b92915050565b600060208284031215610e9257610e91610e1a565b5b6000610ea084828501610e67565b91505092915050565b60008115159050919050565b610ebe81610ea9565b82525050565b6000602082019050610ed96000830184610eb5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f0a82610edf565b9050919050565b610f1a81610eff565b8114610f2557600080fd5b50565b600081359050610f3781610f11565b92915050565b6000819050919050565b610f5081610f3d565b8114610f5b57600080fd5b50565b600081359050610f6d81610f47565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fc682610f7d565b810181811067ffffffffffffffff82111715610fe557610fe4610f8e565b5b80604052505050565b6000610ff8610e10565b90506110048282610fbd565b919050565b600067ffffffffffffffff82111561102457611023610f8e565b5b61102d82610f7d565b9050602081019050919050565b82818337600083830152505050565b600061105c61105784611009565b610fee565b90508281526020810184848401111561107857611077610f78565b5b61108384828561103a565b509392505050565b600082601f8301126110a05761109f610f73565b5b81356110b0848260208601611049565b91505092915050565b600080600080608085870312156110d3576110d2610e1a565b5b60006110e187828801610f28565b94505060206110f287828801610f28565b935050604061110387828801610f5e565b925050606085013567ffffffffffffffff81111561112457611123610e1f565b5b6111308782880161108b565b91505092959194509250565b61114581610e24565b82525050565b6000602082019050611160600083018461113c565b92915050565b6000806040838503121561117d5761117c610e1a565b5b600061118b85828601610f28565b925050602061119c85828601610f5e565b9150509250929050565b6111af81610eff565b82525050565b6111be81610f3d565b82525050565b6040820160008201516111da60008501826111a6565b5060208201516111ed60208501826111b5565b50505050565b60408201600082015161120960008501826111a6565b50602082015161121c60208501826111b5565b50505050565b60408201600082015161123860008501826111a6565b50602082015161124b60208501826111b5565b50505050565b6101208201600082015161126860008501826111a6565b50602082015161127b60208501826111b5565b50604082015161128e60408501826111b5565b5060608201516112a160608501826111c4565b5060808201516112b460a08501826111f3565b5060a08201516112c760e0850182611222565b50505050565b6000610120820190506112e36000830184611251565b92915050565b6112f281610eff565b82525050565b600060208201905061130d60008301846112e9565b92915050565b61131c81610f3d565b82525050565b60006020820190506113376000830184611313565b92915050565b600067ffffffffffffffff82111561135857611357610f8e565b5b602082029050602081019050919050565b600080fd5b600061138161137c8461133d565b610fee565b905080838252602082019050602084028301858111156113a4576113a3611369565b5b835b818110156113cd57806113b98882610f5e565b8452602084019350506020810190506113a6565b5050509392505050565b600082601f8301126113ec576113eb610f73565b5b81356113fc84826020860161136e565b91505092915050565b600080600080600060a0868803121561142157611420610e1a565b5b600061142f88828901610f28565b955050602061144088828901610f28565b945050604086013567ffffffffffffffff81111561146157611460610e1f565b5b61146d888289016113d7565b935050606086013567ffffffffffffffff81111561148e5761148d610e1f565b5b61149a888289016113d7565b925050608086013567ffffffffffffffff8111156114bb576114ba610e1f565b5b6114c78882890161108b565b9150509295509295909350565b600080fd5b6000604082840312156114ef576114ee6114d4565b5b6114f96040610fee565b9050600061150984828501610f28565b600083015250602061151d84828501610f5e565b60208301525092915050565b60006040828403121561153f5761153e6114d4565b5b6115496040610fee565b9050600061155984828501610f28565b600083015250602061156d84828501610f5e565b60208301525092915050565b600080600080600060e0868803121561159557611594610e1a565b5b60006115a388828901610f28565b95505060206115b488828901610f5e565b94505060406115c588828901610f5e565b93505060606115d6888289016114d9565b92505060a06115e788828901611529565b9150509295509295909350565b600080600080600060a086880312156116105761160f610e1a565b5b600061161e88828901610f28565b955050602061162f88828901610f28565b945050604061164088828901610f5e565b935050606061165188828901610f5e565b925050608086013567ffffffffffffffff81111561167257611671610e1f565b5b61167e8882890161108b565b9150509295509295909350565b6000602082840312156116a1576116a0610e1a565b5b60006116af84828501610f28565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006116ff601f836116b8565b915061170a826116c9565b602082019050919050565b6000602082019050818103600083015261172e816116f2565b9050919050565b600060608201905061174a60008301866112e9565b61175760208301856112e9565b6117646040830184611313565b949350505050565b60408201600082015161178260008501826111a6565b50602082015161179560208501826111b5565b50505050565b6040820160008201516117b160008501826111a6565b5060208201516117c460208501826111b5565b50505050565b6000610100820190506117e060008301896112e9565b6117ed60208301886112e9565b6117fa6040830187611313565b6118076060830186611313565b611814608083018561176c565b61182160c083018461179b565b979650505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118886026836116b8565b91506118938261182c565b604082019050919050565b600060208201905081810360008301526118b78161187b565b9050919050565b6000815190506118cd81610f11565b92915050565b6000602082840312156118e9576118e8610e1a565b5b60006118f7848285016118be565b91505092915050565b600060408201905061191560008301856112e9565b61192260208301846112e9565b9392505050565b61193281610ea9565b811461193d57600080fd5b50565b60008151905061194f81611929565b92915050565b60006020828403121561196b5761196a610e1a565b5b600061197984828501611940565b91505092915050565b7f596f75206d75737420626520746865206f776e6572206f7220617070726f766560008201527f6420746f20646f2074686973202e2e2e00000000000000000000000000000000602082015250565b60006119de6030836116b8565b91506119e982611982565b604082019050919050565b60006020820190508181036000830152611a0d816119d1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a4a6020836116b8565b9150611a5582611a14565b602082019050919050565b60006020820190508181036000830152611a7981611a3d565b905091905056fea26469706673582212200abbaa510f05bdb673c40935025d4bb98a22a843b071e8e4b7974df5c29564e764736f6c63430008090033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
