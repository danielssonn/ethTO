/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CancelNFTListing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Rental",
        name: "rental",
        type: "tuple",
      },
    ],
    name: "NFTRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelNFTListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maximumEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "renter",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "expiryTime",
                type: "uint256",
              },
            ],
            internalType: "struct Rental",
            name: "rental",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "pricePerDay",
                type: "uint256",
              },
            ],
            internalType: "struct Payment",
            name: "payment",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct Collateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "daysToRent",
        type: "uint16",
      },
    ],
    name: "rentNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "returnRentedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003f60201b60201c565b6200004760201b60201c565b600180819055506200010b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612b45806200011b6000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101bf578063b9be0447146101ea578063bc197c811461021a578063ed5cb47614610257578063f23a6e6114610280578063f2fde38b146102bd576100a7565b806301ffc9a7146100ac578063150b7a02146100e957806341b02912146101265780636b93a54e1461014f578063715018a61461016b57806388700d1c14610182575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190611edd565b6102e6565b6040516100e091906123bc565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190611c88565b610360565b60405161011d91906123d7565b60405180910390f35b34801561013257600080fd5b5061014d60048036038101906101489190611da2565b610374565b005b61016960048036038101906101649190611de2565b610383565b005b34801561017757600080fd5b50610180610e78565b005b34801561018e57600080fd5b506101a960048036038101906101a49190611da2565b610e8c565b6040516101b69190612552565b60405180910390f35b3480156101cb57600080fd5b506101d46110bd565b6040516101e191906122a8565b60405180910390f35b61020460048036038101906101ff9190611da2565b6110e6565b604051610211919061256e565b60405180910390f35b34801561022657600080fd5b50610241600480360381019061023c9190611bb9565b6110ee565b60405161024e91906123d7565b60405180910390f35b34801561026357600080fd5b5061027e60048036038101906102799190611e35565b611103565b005b34801561028c57600080fd5b506102a760048036038101906102a29190611d0b565b61138a565b6040516102b491906123d7565b60405180910390f35b3480156102c957600080fd5b506102e460048036038101906102df9190611b5f565b61139f565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610359575061035882611423565b5b9050919050565b600063150b7a0260e01b9050949350505050565b61037f33838361148d565b5050565b600260015414156103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c090612512565b60405180910390fd5b60026001819055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050815250509050600042620151808461ffff1661060c9190612672565b62ffffff1661061b919061261c565b9050600082604001511415610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90612432565b60405180910390fd5b60008361ffff16116106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a3906124b2565b60405180910390fd5b81602001518111156106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea90612452565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1682606001516000015173ffffffffffffffffffffffffffffffffffffffff1614801561073f57506000826060015160200151145b61077e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610775906124f2565b60405180910390fd5b6000826080015160000151905060008360a0015160000151905060008460800151602001518661ffff166107b291906126af565b9050808373ffffffffffffffffffffffffffffffffffffffff166370a082316107d96116de565b6040518263ffffffff1660e01b81526004016107f591906122a8565b60206040518083038186803b15801561080d57600080fd5b505afa158015610821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108459190611f0a565b1015610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d906123f2565b60405180910390fd5b8460a00151602001518273ffffffffffffffffffffffffffffffffffffffff166370a082316108b36116de565b6040518263ffffffff1660e01b81526004016108cf91906122a8565b60206040518083038186803b1580156108e757600080fd5b505afa1580156108fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091f9190611f0a565b1015610960576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095790612472565b60405180910390fd5b8460a001516000015173ffffffffffffffffffffffffffffffffffffffff1685608001516000015173ffffffffffffffffffffffffffffffffffffffff161415610a905760008560a0015160200151826109ba919061261c565b9050808473ffffffffffffffffffffffffffffffffffffffff166370a082316109e16116de565b6040518263ffffffff1660e01b81526004016109fd91906122a8565b60206040518083038186803b158015610a1557600080fd5b505afa158015610a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4d9190611f0a565b1015610a8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8590612532565b60405180910390fd5b505b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd33308860a00151602001516040518463ffffffff1660e01b8152600401610ad5939291906122ec565b602060405180830381600087803b158015610aef57600080fd5b505af1158015610b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b279190611eb0565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd338760000151846040518463ffffffff1660e01b8152600401610b69939291906122ec565b602060405180830381600087803b158015610b8357600080fd5b505af1158015610b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbb9190611eb0565b508773ffffffffffffffffffffffffffffffffffffffff166342842e0e30338a6040518463ffffffff1660e01b8152600401610bf9939291906122ec565b600060405180830381600087803b158015610c1357600080fd5b505af1158015610c27573d6000803e3d6000fd5b505050506040518060400160405280610c3e6116de565b73ffffffffffffffffffffffffffffffffffffffff16815260200185815250856060018190525084600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060808201518160050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060a08201518160070160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550509050507fd5f86e4b4526d796a88ce410e7a72c3b2599bab2c0f9d0acef0ddf0cd44ca6a188888760600151604051610e5f93929190612385565b60405180910390a1505050505060018081905550505050565b610e806116e6565b610e8a6000611764565b565b610e94611830565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081525050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600092915050565b600063bc197c8160e01b905095945050505050565b60026001541415611149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114090612512565b60405180910390fd5b600260018190555061116361115c6116de565b868661148d565b600061116d6116de565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160010181905550428160020181905550838160050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050828160070160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050508673ffffffffffffffffffffffffffffffffffffffff166342842e0e8330896040518463ffffffff1660e01b8152600401611307939291906122ec565b600060405180830381600087803b15801561132157600080fd5b505af1158015611335573d6000803e3d6000fd5b505050507f33375d78bcb09790857a4583927d3ac93d1f98336fa490a47304999668620f0d33888888888860405161137296959493929190612323565b60405180910390a15050600180819055505050505050565b600063f23a6e6160e01b905095945050505050565b6113a76116e6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140e90612412565b60405180910390fd5b61142081611764565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016114c8919061256e565b60206040518083038186803b1580156114e057600080fd5b505afa1580156114f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115189190611b8c565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061160757508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b815260040161159f919061256e565b60206040518083038186803b1580156115b757600080fd5b505afa1580156115cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ef9190611b8c565b73ffffffffffffffffffffffffffffffffffffffff16145b8061169957508273ffffffffffffffffffffffffffffffffffffffff1663e985e9c582866040518363ffffffff1660e01b81526004016116489291906122c3565b60206040518083038186803b15801561166057600080fd5b505afa158015611674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116989190611eb0565b5b6116d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cf90612492565b60405180910390fd5b50505050565b600033905090565b6116ee611828565b73ffffffffffffffffffffffffffffffffffffffff1661170c6110bd565b73ffffffffffffffffffffffffffffffffffffffff1614611762576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611759906124d2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200161186e61188e565b815260200161187b6118be565b81526020016118886118ee565b81525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600061193161192c846125ae565b612589565b9050808382526020820190508285602086028201111561195457611953612842565b5b60005b85811015611984578161196a8882611b35565b845260208401935060208301925050600181019050611957565b5050509392505050565b60006119a161199c846125da565b612589565b9050828152602081018484840111156119bd576119bc612847565b5b6119c884828561279a565b509392505050565b6000813590506119df81612a9c565b92915050565b6000815190506119f481612a9c565b92915050565b600082601f830112611a0f57611a0e612838565b5b8135611a1f84826020860161191e565b91505092915050565b600081519050611a3781612ab3565b92915050565b600081359050611a4c81612aca565b92915050565b600082601f830112611a6757611a66612838565b5b8135611a7784826020860161198e565b91505092915050565b600060408284031215611a9657611a9561283d565b5b611aa06040612589565b90506000611ab0848285016119d0565b6000830152506020611ac484828501611b35565b60208301525092915050565b600060408284031215611ae657611ae561283d565b5b611af06040612589565b90506000611b00848285016119d0565b6000830152506020611b1484828501611b35565b60208301525092915050565b600081359050611b2f81612ae1565b92915050565b600081359050611b4481612af8565b92915050565b600081519050611b5981612af8565b92915050565b600060208284031215611b7557611b74612851565b5b6000611b83848285016119d0565b91505092915050565b600060208284031215611ba257611ba1612851565b5b6000611bb0848285016119e5565b91505092915050565b600080600080600060a08688031215611bd557611bd4612851565b5b6000611be3888289016119d0565b9550506020611bf4888289016119d0565b945050604086013567ffffffffffffffff811115611c1557611c1461284c565b5b611c21888289016119fa565b935050606086013567ffffffffffffffff811115611c4257611c4161284c565b5b611c4e888289016119fa565b925050608086013567ffffffffffffffff811115611c6f57611c6e61284c565b5b611c7b88828901611a52565b9150509295509295909350565b60008060008060808587031215611ca257611ca1612851565b5b6000611cb0878288016119d0565b9450506020611cc1878288016119d0565b9350506040611cd287828801611b35565b925050606085013567ffffffffffffffff811115611cf357611cf261284c565b5b611cff87828801611a52565b91505092959194509250565b600080600080600060a08688031215611d2757611d26612851565b5b6000611d35888289016119d0565b9550506020611d46888289016119d0565b9450506040611d5788828901611b35565b9350506060611d6888828901611b35565b925050608086013567ffffffffffffffff811115611d8957611d8861284c565b5b611d9588828901611a52565b9150509295509295909350565b60008060408385031215611db957611db8612851565b5b6000611dc7858286016119d0565b9250506020611dd885828601611b35565b9150509250929050565b600080600060608486031215611dfb57611dfa612851565b5b6000611e09868287016119d0565b9350506020611e1a86828701611b35565b9250506040611e2b86828701611b20565b9150509250925092565b600080600080600060e08688031215611e5157611e50612851565b5b6000611e5f888289016119d0565b9550506020611e7088828901611b35565b9450506040611e8188828901611b35565b9350506060611e9288828901611ad0565b92505060a0611ea388828901611a80565b9150509295509295909350565b600060208284031215611ec657611ec5612851565b5b6000611ed484828501611a28565b91505092915050565b600060208284031215611ef357611ef2612851565b5b6000611f0184828501611a3d565b91505092915050565b600060208284031215611f2057611f1f612851565b5b6000611f2e84828501611b4a565b91505092915050565b611f4081612709565b82525050565b611f4f81612709565b82525050565b611f5e8161271b565b82525050565b611f6d81612727565b82525050565b6000611f80601a8361260b565b9150611f8b82612867565b602082019050919050565b6000611fa360268361260b565b9150611fae82612890565b604082019050919050565b6000611fc6601b8361260b565b9150611fd1826128df565b602082019050919050565b6000611fe9601a8361260b565b9150611ff482612908565b602082019050919050565b600061200c601d8361260b565b915061201782612931565b602082019050919050565b600061202f60308361260b565b915061203a8261295a565b604082019050919050565b6000612052602d8361260b565b915061205d826129a9565b604082019050919050565b600061207560208361260b565b9150612080826129f8565b602082019050919050565b6000612098601c8361260b565b91506120a382612a21565b602082019050919050565b60006120bb601f8361260b565b91506120c682612a4a565b602082019050919050565b60006120de601b8361260b565b91506120e982612a73565b602082019050919050565b60408201600082015161210a6000850182611f37565b50602082015161211d602085018261228a565b50505050565b6040820160008201516121396000850182611f37565b50602082015161214c602085018261228a565b50505050565b610120820160008201516121696000850182611f37565b50602082015161217c602085018261228a565b50604082015161218f604085018261228a565b5060608201516121a2606085018261222c565b5060808201516121b560a08501826121ce565b5060a08201516121c860e08501826120f4565b50505050565b6040820160008201516121e46000850182611f37565b5060208201516121f7602085018261228a565b50505050565b6040820160008201516122136000850182611f37565b506020820151612226602085018261228a565b50505050565b6040820160008201516122426000850182611f37565b506020820151612255602085018261228a565b50505050565b6040820160008201516122716000850182611f37565b506020820151612284602085018261228a565b50505050565b61229381612790565b82525050565b6122a281612790565b82525050565b60006020820190506122bd6000830184611f46565b92915050565b60006040820190506122d86000830185611f46565b6122e56020830184611f46565b9392505050565b60006060820190506123016000830186611f46565b61230e6020830185611f46565b61231b6040830184612299565b949350505050565b6000610100820190506123396000830189611f46565b6123466020830188611f46565b6123536040830187612299565b6123606060830186612299565b61236d60808301856121fd565b61237a60c0830184612123565b979650505050505050565b600060808201905061239a6000830186611f46565b6123a76020830185612299565b6123b4604083018461225b565b949350505050565b60006020820190506123d16000830184611f55565b92915050565b60006020820190506123ec6000830184611f64565b92915050565b6000602082019050818103600083015261240b81611f73565b9050919050565b6000602082019050818103600083015261242b81611f96565b9050919050565b6000602082019050818103600083015261244b81611fb9565b9050919050565b6000602082019050818103600083015261246b81611fdc565b9050919050565b6000602082019050818103600083015261248b81611fff565b9050919050565b600060208201905081810360008301526124ab81612022565b9050919050565b600060208201905081810360008301526124cb81612045565b9050919050565b600060208201905081810360008301526124eb81612068565b9050919050565b6000602082019050818103600083015261250b8161208b565b9050919050565b6000602082019050818103600083015261252b816120ae565b9050919050565b6000602082019050818103600083015261254b816120d1565b9050919050565b6000610120820190506125686000830184612152565b92915050565b60006020820190506125836000830184612299565b92915050565b60006125936125a4565b905061259f82826127a9565b919050565b6000604051905090565b600067ffffffffffffffff8211156125c9576125c8612809565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156125f5576125f4612809565b5b6125fe82612856565b9050602081019050919050565b600082825260208201905092915050565b600061262782612790565b915061263283612790565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612667576126666127da565b5b828201905092915050565b600061267d82612781565b915061268883612781565b92508162ffffff04831182151516156126a4576126a36127da565b5b828202905092915050565b60006126ba82612790565b91506126c583612790565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156126fe576126fd6127da565b5b828202905092915050565b600061271482612761565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6127b282612856565b810181811067ffffffffffffffff821117156127d1576127d0612809565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f496e73756666696369656e74207061796d656e742066756e6473000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f54686973206c697374696e6720646f6573206e6f742065786973740000000000600082015250565b7f52656e74616c2074696d656672616d6520746f6f206c6f6e672e000000000000600082015250565b7f496e73756666696369656e7420636f6c6c61746572616c2066756e6473000000600082015250565b7f596f75206d75737420626520746865206f776e6572206f7220617070726f766560008201527f6420746f20646f2074686973202e2e2e00000000000000000000000000000000602082015250565b7f5468652072656e74616c20706572696f64206d7573742062652067726561746560008201527f72207468616e2030206461797300000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f54686973206974656d20697320616c72656164792072656e7465642e00000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f496e73756666696369656e7420636f6d62696e65642066756e64730000000000600082015250565b612aa581612709565b8114612ab057600080fd5b50565b612abc8161271b565b8114612ac757600080fd5b50565b612ad381612727565b8114612ade57600080fd5b50565b612aea81612753565b8114612af557600080fd5b50565b612b0181612790565b8114612b0c57600080fd5b5056fea2646970667358221220deafb2571e19caa9c2e80ef399a22f41c79c038d7a0ede93fa4d004b9ac62d6f64736f6c63430008070033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
