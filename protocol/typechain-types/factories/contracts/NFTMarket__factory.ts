/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CancelNFTListing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "minimumDuration",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "maximumEndTime",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "maximumEndTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "minimumDuration",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "NFTRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelNFTListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "maximumEndTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "minimumDuration",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "pricePerDay",
                type: "uint256",
              },
            ],
            internalType: "struct Payment",
            name: "payment",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct Collateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "minimumDuration",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "maximumEndTime",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "maximumEndTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "minimumDuration",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "rentNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "returnRentedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611a55806101146000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101bf578063bc197c81146101ea578063f23a6e6114610227578063f2fde38b14610264578063f663c8a31461028d578063fead2cab146102b6576100a7565b806301ffc9a7146100ac578063150b7a02146100e957806341b0291214610126578063557469cd1461014f578063715018a61461016b57806388700d1c14610182575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce91906112af565b6102e6565b6040516100e09190611616565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b919061109a565b610360565b60405161011d9190611631565b60405180910390f35b34801561013257600080fd5b5061014d600480360381019061014891906111b4565b610374565b005b610169600480360381019061016491906111f4565b610383565b005b34801561017757600080fd5b50610180610423565b005b34801561018e57600080fd5b506101a960048036038101906101a491906111b4565b610437565b6040516101b691906116cc565b60405180910390f35b3480156101cb57600080fd5b506101d4610445565b6040516101e1919061152b565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c9190610f78565b61046e565b60405161021e9190611631565b60405180910390f35b34801561023357600080fd5b5061024e6004803603810190610249919061111d565b610483565b60405161025b9190611631565b60405180910390f35b34801561027057600080fd5b5061028b60048036038101906102869190610f1e565b610498565b005b34801561029957600080fd5b506102b460048036038101906102af91906111f4565b61051c565b005b6102d060048036038101906102cb9190611047565b6107f3565b6040516102dd91906116e8565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103595750610358826107fc565b5b9050919050565b600063150b7a0260e01b9050949350505050565b61037f338383610866565b5050565b600260015414156103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c0906116ac565b60405180910390fd5b60026001819055507f1cb9dc17259bdbaa7ad588da81e2eb91b8dcefe6814b92df224f538d0eec53bf3387878787878760405161040c97969594939291906115a6565b60405180910390a160018081905550505050505050565b61042b610ab7565b6104356000610b35565b565b61043f610c09565b92915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b6104a0610ab7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610510576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105079061164c565b60405180910390fd5b61051981610b35565b50565b60026001541415610562576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610559906116ac565b60405180910390fd5b600260018190555061057c610575610bf9565b8787610866565b6000610586610bf9565b90506000600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008881526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550848160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550428160020181905550838160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050828160060160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050508773ffffffffffffffffffffffffffffffffffffffff166342842e0e83308a6040518463ffffffff1660e01b815260040161076d9392919061156f565b600060405180830381600087803b15801561078757600080fd5b505af115801561079b573d6000803e3d6000fd5b505050507f1425b40b48a747b7033145f023e006ef4367f180f563c62f0fcbbcf55adfc555338989898989896040516107da97969594939291906115a6565b60405180910390a1505060018081905550505050505050565b60009392505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016108a191906116e8565b60206040518083038186803b1580156108b957600080fd5b505afa1580156108cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f19190610f4b565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806109e057508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b815260040161097891906116e8565b60206040518083038186803b15801561099057600080fd5b505afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c89190610f4b565b73ffffffffffffffffffffffffffffffffffffffff16145b80610a7257508273ffffffffffffffffffffffffffffffffffffffff1663e985e9c582866040518363ffffffff1660e01b8152600401610a21929190611546565b60206040518083038186803b158015610a3957600080fd5b505afa158015610a4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a719190611282565b5b610ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa89061166c565b60405180910390fd5b50505050565b610abf610c01565b73ffffffffffffffffffffffffffffffffffffffff16610add610445565b73ffffffffffffffffffffffffffffffffffffffff1614610b33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2a9061168c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600033905090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001610c7f610c92565b8152602001610c8c610cc2565b81525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000610d05610d0084611728565b611703565b90508083825260208201905082856020860282011115610d2857610d27611897565b5b60005b85811015610d585781610d3e8882610ef4565b845260208401935060208301925050600181019050610d2b565b5050509392505050565b6000610d75610d7084611754565b611703565b905082815260208101848484011115610d9157610d9061189c565b5b610d9c84828561181e565b509392505050565b600081359050610db3816119ac565b92915050565b600081519050610dc8816119ac565b92915050565b600082601f830112610de357610de261188d565b5b8135610df3848260208601610cf2565b91505092915050565b600081519050610e0b816119c3565b92915050565b600081359050610e20816119da565b92915050565b600082601f830112610e3b57610e3a61188d565b5b8135610e4b848260208601610d62565b91505092915050565b600060408284031215610e6a57610e69611892565b5b610e746040611703565b90506000610e8484828501610da4565b6000830152506020610e9884828501610ef4565b60208301525092915050565b600060408284031215610eba57610eb9611892565b5b610ec46040611703565b90506000610ed484828501610da4565b6000830152506020610ee884828501610ef4565b60208301525092915050565b600081359050610f03816119f1565b92915050565b600081359050610f1881611a08565b92915050565b600060208284031215610f3457610f336118a6565b5b6000610f4284828501610da4565b91505092915050565b600060208284031215610f6157610f606118a6565b5b6000610f6f84828501610db9565b91505092915050565b600080600080600060a08688031215610f9457610f936118a6565b5b6000610fa288828901610da4565b9550506020610fb388828901610da4565b945050604086013567ffffffffffffffff811115610fd457610fd36118a1565b5b610fe088828901610dce565b935050606086013567ffffffffffffffff811115611001576110006118a1565b5b61100d88828901610dce565b925050608086013567ffffffffffffffff81111561102e5761102d6118a1565b5b61103a88828901610e26565b9150509295509295909350565b6000806000606084860312156110605761105f6118a6565b5b600061106e86828701610da4565b935050602061107f86828701610da4565b925050604061109086828701610ef4565b9150509250925092565b600080600080608085870312156110b4576110b36118a6565b5b60006110c287828801610da4565b94505060206110d387828801610da4565b93505060406110e487828801610ef4565b925050606085013567ffffffffffffffff811115611105576111046118a1565b5b61111187828801610e26565b91505092959194509250565b600080600080600060a08688031215611139576111386118a6565b5b600061114788828901610da4565b955050602061115888828901610da4565b945050604061116988828901610ef4565b935050606061117a88828901610ef4565b925050608086013567ffffffffffffffff81111561119b5761119a6118a1565b5b6111a788828901610e26565b9150509295509295909350565b600080604083850312156111cb576111ca6118a6565b5b60006111d985828601610da4565b92505060206111ea85828601610ef4565b9150509250929050565b6000806000806000806101008789031215611212576112116118a6565b5b600061122089828a01610da4565b965050602061123189828a01610ef4565b955050604061124289828a01610f09565b945050606061125389828a01610f09565b935050608061126489828a01610ea4565b92505060c061127589828a01610e54565b9150509295509295509295565b600060208284031215611298576112976118a6565b5b60006112a684828501610dfc565b91505092915050565b6000602082840312156112c5576112c46118a6565b5b60006112d384828501610e11565b91505092915050565b6112e581611796565b82525050565b6112f481611796565b82525050565b611303816117a8565b82525050565b611312816117b4565b82525050565b6000611325602683611785565b9150611330826118bc565b604082019050919050565b6000611348603083611785565b91506113538261190b565b604082019050919050565b600061136b602083611785565b91506113768261195a565b602082019050919050565b600061138e601f83611785565b915061139982611983565b602082019050919050565b6040820160008201516113ba60008501826112dc565b5060208201516113cd60208501826114ef565b50505050565b6040820160008201516113e960008501826112dc565b5060208201516113fc60208501826114ef565b50505050565b6101208201600082015161141960008501826112dc565b50602082015161142c602085018261150d565b50604082015161143f604085018261150d565b50606082015161145260608501826114ef565b50608082015161146560808501826112dc565b5060a082015161147860a0850182611491565b5060c082015161148b60e08501826113a4565b50505050565b6040820160008201516114a760008501826112dc565b5060208201516114ba60208501826114ef565b50505050565b6040820160008201516114d660008501826112dc565b5060208201516114e960208501826114ef565b50505050565b6114f881611800565b82525050565b61150781611800565b82525050565b6115168161180a565b82525050565b6115258161180a565b82525050565b600060208201905061154060008301846112eb565b92915050565b600060408201905061155b60008301856112eb565b61156860208301846112eb565b9392505050565b600060608201905061158460008301866112eb565b61159160208301856112eb565b61159e60408301846114fe565b949350505050565b6000610120820190506115bc600083018a6112eb565b6115c960208301896112eb565b6115d660408301886114fe565b6115e3606083018761151c565b6115f0608083018661151c565b6115fd60a08301856114c0565b61160a60e08301846113d3565b98975050505050505050565b600060208201905061162b60008301846112fa565b92915050565b60006020820190506116466000830184611309565b92915050565b6000602082019050818103600083015261166581611318565b9050919050565b600060208201905081810360008301526116858161133b565b9050919050565b600060208201905081810360008301526116a58161135e565b9050919050565b600060208201905081810360008301526116c581611381565b9050919050565b6000610120820190506116e26000830184611402565b92915050565b60006020820190506116fd60008301846114fe565b92915050565b600061170d61171e565b9050611719828261182d565b919050565b6000604051905090565b600067ffffffffffffffff8211156117435761174261185e565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561176f5761176e61185e565b5b611778826118ab565b9050602081019050919050565b600082825260208201905092915050565b60006117a1826117e0565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b611836826118ab565b810181811067ffffffffffffffff821117156118555761185461185e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f596f75206d75737420626520746865206f776e6572206f7220617070726f766560008201527f6420746f20646f2074686973202e2e2e00000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6119b581611796565b81146119c057600080fd5b50565b6119cc816117a8565b81146119d757600080fd5b50565b6119e3816117b4565b81146119ee57600080fd5b50565b6119fa81611800565b8114611a0557600080fd5b50565b611a118161180a565b8114611a1c57600080fd5b5056fea26469706673582212206555420b500591da88edf737ed6a1ff08089cf8aaf3d4a2306bb17797a1bf1f964736f6c63430008070033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
