/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTMarketExposed,
  NFTMarketExposedInterface,
} from "../../contracts/NFTMarketExposed";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Rental",
        name: "rental",
        type: "tuple",
      },
    ],
    name: "NFTRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelNFTListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maximumEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "renter",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "expiryTime",
                type: "uint256",
              },
            ],
            internalType: "struct Rental",
            name: "rental",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "pricePerDay",
                type: "uint256",
              },
            ],
            internalType: "struct Payment",
            name: "payment",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct Collateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximumEndTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "returnRentedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "daysToRent",
        type: "uint16",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
        ],
        internalType: "struct Payment",
        name: "payment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Collateral",
        name: "collateral",
        type: "tuple",
      },
      {
        internalType: "uint16",
        name: "daysToRent",
        type: "uint16",
      },
    ],
    name: "verifyPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "daysToRent",
        type: "uint16",
      },
    ],
    name: "verifyRentConditions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003f60201b60201c565b6200004760201b60201c565b600180819055506200010b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612cda806200011b6000396000f3fe6080604052600436106100dd5760003560e01c8063b260436b1161007f578063c5eeb35611610059578063c5eeb356146102c3578063ed5cb476146102ec578063f23a6e6114610315578063f2fde38b14610352576100dd565b8063b260436b1461022d578063b9be044714610256578063bc197c8114610286576100dd565b806355d76c15116100bb57806355d76c1514610185578063715018a6146101ae57806388700d1c146101c55780638da5cb5b14610202576100dd565b806301ffc9a7146100e2578063150b7a021461011f57806341b029121461015c575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611914565b61037b565b604051610116919061195c565b60405180910390f35b34801561012b57600080fd5b5061014660048036038101906101419190611b51565b6103f5565b6040516101539190611be3565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190611bfe565b610409565b005b34801561019157600080fd5b506101ac60048036038101906101a79190611c78565b61041f565b005b3480156101ba57600080fd5b506101c3610432565b005b3480156101d157600080fd5b506101ec60048036038101906101e79190611bfe565b610446565b6040516101f99190611e19565b60405180910390f35b34801561020e57600080fd5b506102176106d8565b6040516102249190611e44565b60405180910390f35b34801561023957600080fd5b50610254600480360381019061024f9190611f04565b610701565b005b610270600480360381019061026b9190611bfe565b610715565b60405161027d9190611f7a565b60405180910390f35b34801561029257600080fd5b506102ad60048036038101906102a8919061205d565b61071d565b6040516102ba9190611be3565b60405180910390f35b3480156102cf57600080fd5b506102ea60048036038101906102e5919061212c565b610732565b005b3480156102f857600080fd5b50610313600480360381019061030e9190612193565b610744565b005b34801561032157600080fd5b5061033c6004803603810190610337919061220e565b6109d2565b6040516103499190611be3565b60405180910390f35b34801561035e57600080fd5b50610379600480360381019061037491906122a5565b6109e7565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103ee57506103ed82610a6b565b5b9050919050565b600063150b7a0260e01b9050949350505050565b61041b610414610ad5565b8383610add565b5050565b61042a838383610d2e565b505050505050565b61043a6110a3565b6104446000611121565b565b61044e611795565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600782016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001600982016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081525050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61070d848484846111e5565b505050505050565b600092915050565b600063bc197c8160e01b905095945050505050565b61073e84848484611646565b50505050565b6002600154141561078a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107819061232f565b60405180910390fd5b60026001819055506107a461079d610ad5565b8686610add565b60006107ae610ad5565b90506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000209050818160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160030181905550428160040181905550838160070160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050828160090160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050508673ffffffffffffffffffffffffffffffffffffffff166342842e0e8330896040518463ffffffff1660e01b81526004016109489392919061234f565b600060405180830381600087803b15801561096257600080fd5b505af1158015610976573d6000803e3d6000fd5b505050507f33375d78bcb09790857a4583927d3ac93d1f98336fa490a47304999668620f0d6109a3610ad5565b88888888886040516109ba969594939291906123e4565b60405180910390a15050600180819055505050505050565b600063f23a6e6160e01b905095945050505050565b6109ef6110a3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a56906124b8565b60405180910390fd5b610a6881611121565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610b189190611f7a565b60206040518083038186803b158015610b3057600080fd5b505afa158015610b44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6891906124ed565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c5757508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b8152600401610bef9190611f7a565b60206040518083038186803b158015610c0757600080fd5b505afa158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f91906124ed565b73ffffffffffffffffffffffffffffffffffffffff16145b80610ce957508273ffffffffffffffffffffffffffffffffffffffff1663e985e9c582866040518363ffffffff1660e01b8152600401610c9892919061251a565b60206040518083038186803b158015610cb057600080fd5b505afa158015610cc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce8919061256f565b5b610d28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1f9061260e565b60405180910390fd5b50505050565b610d36611818565b610d3e611848565b600060026001541415610d86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7d9061232f565b60405180910390fd5b60026001819055506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000209050600042620151808761ffff16610df8919061266c565b62ffffff16610e0791906126a9565b9050600082600401541415610e51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e489061274b565b60405180910390fd5b60008661ffff1611610e98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8f906127dd565b60405180910390fd5b8160030154811115610edf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed690612849565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168260050160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610f49575060008260050160010154145b610f88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7f906128b5565b60405180910390fd5b816007016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509450816009016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505093508160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925050506001808190555093509350939050565b6110ab61178d565b73ffffffffffffffffffffffffffffffffffffffff166110c96106d8565b73ffffffffffffffffffffffffffffffffffffffff161461111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690612921565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b606060006002600154141561122f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112269061232f565b60405180910390fd5b60026001819055506000856000015190508073ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561128657600080fd5b505afa15801561129a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112c39190612a15565b925060008560000151905086602001518561ffff166112e29190612a5e565b9250856000015173ffffffffffffffffffffffffffffffffffffffff16876000015173ffffffffffffffffffffffffffffffffffffffff16141561140557600086602001518461133291906126a9565b9050808373ffffffffffffffffffffffffffffffffffffffff166370a082318b6040518263ffffffff1660e01b815260040161136e9190611e44565b60206040518083038186803b15801561138657600080fd5b505afa15801561139a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113be9190612acd565b10156113ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f690612b46565b60405180910390fd5b506115a0565b828273ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b815260040161143f9190611e44565b60206040518083038186803b15801561145757600080fd5b505afa15801561146b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148f9190612acd565b10156114d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c790612bb2565b60405180910390fd5b85602001518173ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b815260040161150e9190611e44565b60206040518083038186803b15801561152657600080fd5b505afa15801561153a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155e9190612acd565b101561159f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159690612c1e565b60405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd893089602001516040518463ffffffff1660e01b81526004016115e19392919061234f565b602060405180830381600087803b1580156115fb57600080fd5b505af115801561160f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611633919061256f565b5050506001808190555094509492505050565b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000209050600042620151808461ffff166116b0919061266c565b62ffffff166116bf91906126a9565b9050600060405180604001604052808673ffffffffffffffffffffffffffffffffffffffff168152602001838152509050808360050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050507fd5f86e4b4526d796a88ce410e7a72c3b2599bab2c0f9d0acef0ddf0cd44ca6a187878360405161177c93929190612c6d565b60405180910390a150505050505050565b600033905090565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016117f8611878565b8152602001611805611818565b8152602001611812611848565b81525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6118f1816118bc565b81146118fc57600080fd5b50565b60008135905061190e816118e8565b92915050565b60006020828403121561192a576119296118b2565b5b6000611938848285016118ff565b91505092915050565b60008115159050919050565b61195681611941565b82525050565b6000602082019050611971600083018461194d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119a282611977565b9050919050565b6119b281611997565b81146119bd57600080fd5b50565b6000813590506119cf816119a9565b92915050565b6000819050919050565b6119e8816119d5565b81146119f357600080fd5b50565b600081359050611a05816119df565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a5e82611a15565b810181811067ffffffffffffffff82111715611a7d57611a7c611a26565b5b80604052505050565b6000611a906118a8565b9050611a9c8282611a55565b919050565b600067ffffffffffffffff821115611abc57611abb611a26565b5b611ac582611a15565b9050602081019050919050565b82818337600083830152505050565b6000611af4611aef84611aa1565b611a86565b905082815260208101848484011115611b1057611b0f611a10565b5b611b1b848285611ad2565b509392505050565b600082601f830112611b3857611b37611a0b565b5b8135611b48848260208601611ae1565b91505092915050565b60008060008060808587031215611b6b57611b6a6118b2565b5b6000611b79878288016119c0565b9450506020611b8a878288016119c0565b9350506040611b9b878288016119f6565b925050606085013567ffffffffffffffff811115611bbc57611bbb6118b7565b5b611bc887828801611b23565b91505092959194509250565b611bdd816118bc565b82525050565b6000602082019050611bf86000830184611bd4565b92915050565b60008060408385031215611c1557611c146118b2565b5b6000611c23858286016119c0565b9250506020611c34858286016119f6565b9150509250929050565b600061ffff82169050919050565b611c5581611c3e565b8114611c6057600080fd5b50565b600081359050611c7281611c4c565b92915050565b600080600060608486031215611c9157611c906118b2565b5b6000611c9f868287016119c0565b9350506020611cb0868287016119f6565b9250506040611cc186828701611c63565b9150509250925092565b611cd481611997565b82525050565b611ce3816119d5565b82525050565b604082016000820151611cff6000850182611ccb565b506020820151611d126020850182611cda565b50505050565b604082016000820151611d2e6000850182611ccb565b506020820151611d416020850182611cda565b50505050565b604082016000820151611d5d6000850182611ccb565b506020820151611d706020850182611cda565b50505050565b61016082016000820151611d8d6000850182611ccb565b506020820151611da06020850182611cda565b506040820151611db36040850182611ccb565b506060820151611dc66060850182611cda565b506080820151611dd96080850182611cda565b5060a0820151611dec60a0850182611ce9565b5060c0820151611dff60e0850182611d18565b5060e0820151611e13610120850182611d47565b50505050565b600061016082019050611e2f6000830184611d76565b92915050565b611e3e81611997565b82525050565b6000602082019050611e596000830184611e35565b92915050565b600080fd5b600060408284031215611e7a57611e79611e5f565b5b611e846040611a86565b90506000611e94848285016119c0565b6000830152506020611ea8848285016119f6565b60208301525092915050565b600060408284031215611eca57611ec9611e5f565b5b611ed46040611a86565b90506000611ee4848285016119c0565b6000830152506020611ef8848285016119f6565b60208301525092915050565b60008060008060c08587031215611f1e57611f1d6118b2565b5b6000611f2c878288016119c0565b9450506020611f3d87828801611e64565b9350506060611f4e87828801611eb4565b92505060a0611f5f87828801611c63565b91505092959194509250565b611f74816119d5565b82525050565b6000602082019050611f8f6000830184611f6b565b92915050565b600067ffffffffffffffff821115611fb057611faf611a26565b5b602082029050602081019050919050565b600080fd5b6000611fd9611fd484611f95565b611a86565b90508083825260208201905060208402830185811115611ffc57611ffb611fc1565b5b835b81811015612025578061201188826119f6565b845260208401935050602081019050611ffe565b5050509392505050565b600082601f83011261204457612043611a0b565b5b8135612054848260208601611fc6565b91505092915050565b600080600080600060a08688031215612079576120786118b2565b5b6000612087888289016119c0565b9550506020612098888289016119c0565b945050604086013567ffffffffffffffff8111156120b9576120b86118b7565b5b6120c58882890161202f565b935050606086013567ffffffffffffffff8111156120e6576120e56118b7565b5b6120f28882890161202f565b925050608086013567ffffffffffffffff811115612113576121126118b7565b5b61211f88828901611b23565b9150509295509295909350565b60008060008060808587031215612146576121456118b2565b5b6000612154878288016119c0565b9450506020612165878288016119f6565b9350506040612176878288016119c0565b925050606061218787828801611c63565b91505092959194509250565b600080600080600060e086880312156121af576121ae6118b2565b5b60006121bd888289016119c0565b95505060206121ce888289016119f6565b94505060406121df888289016119f6565b93505060606121f088828901611e64565b92505060a061220188828901611eb4565b9150509295509295909350565b600080600080600060a0868803121561222a576122296118b2565b5b6000612238888289016119c0565b9550506020612249888289016119c0565b945050604061225a888289016119f6565b935050606061226b888289016119f6565b925050608086013567ffffffffffffffff81111561228c5761228b6118b7565b5b61229888828901611b23565b9150509295509295909350565b6000602082840312156122bb576122ba6118b2565b5b60006122c9848285016119c0565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612319601f836122d2565b9150612324826122e3565b602082019050919050565b600060208201905081810360008301526123488161230c565b9050919050565b60006060820190506123646000830186611e35565b6123716020830185611e35565b61237e6040830184611f6b565b949350505050565b60408201600082015161239c6000850182611ccb565b5060208201516123af6020850182611cda565b50505050565b6040820160008201516123cb6000850182611ccb565b5060208201516123de6020850182611cda565b50505050565b6000610100820190506123fa6000830189611e35565b6124076020830188611e35565b6124146040830187611f6b565b6124216060830186611f6b565b61242e6080830185612386565b61243b60c08301846123b5565b979650505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006124a26026836122d2565b91506124ad82612446565b604082019050919050565b600060208201905081810360008301526124d181612495565b9050919050565b6000815190506124e7816119a9565b92915050565b600060208284031215612503576125026118b2565b5b6000612511848285016124d8565b91505092915050565b600060408201905061252f6000830185611e35565b61253c6020830184611e35565b9392505050565b61254c81611941565b811461255757600080fd5b50565b60008151905061256981612543565b92915050565b600060208284031215612585576125846118b2565b5b60006125938482850161255a565b91505092915050565b7f596f75206d75737420626520746865206f776e6572206f7220617070726f766560008201527f6420746f20646f2074686973202e2e2e00000000000000000000000000000000602082015250565b60006125f86030836122d2565b91506126038261259c565b604082019050919050565b60006020820190508181036000830152612627816125eb565b9050919050565b600062ffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006126778261262e565b91506126828361262e565b92508162ffffff048311821515161561269e5761269d61263d565b5b828202905092915050565b60006126b4826119d5565b91506126bf836119d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126f4576126f361263d565b5b828201905092915050565b7f54686973206c697374696e6720646f6573206e6f742065786973740000000000600082015250565b6000612735601b836122d2565b9150612740826126ff565b602082019050919050565b6000602082019050818103600083015261276481612728565b9050919050565b7f5468652072656e74616c20706572696f64206d7573742062652067726561746560008201527f72207468616e2030206461797300000000000000000000000000000000000000602082015250565b60006127c7602d836122d2565b91506127d28261276b565b604082019050919050565b600060208201905081810360008301526127f6816127ba565b9050919050565b7f52656e74616c2074696d656672616d6520746f6f206c6f6e672e000000000000600082015250565b6000612833601a836122d2565b915061283e826127fd565b602082019050919050565b6000602082019050818103600083015261286281612826565b9050919050565b7f54686973206974656d20697320616c72656164792072656e7465642e00000000600082015250565b600061289f601c836122d2565b91506128aa82612869565b602082019050919050565b600060208201905081810360008301526128ce81612892565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061290b6020836122d2565b9150612916826128d5565b602082019050919050565b6000602082019050818103600083015261293a816128fe565b9050919050565b600067ffffffffffffffff82111561295c5761295b611a26565b5b61296582611a15565b9050602081019050919050565b60005b83811015612990578082015181840152602081019050612975565b8381111561299f576000848401525b50505050565b60006129b86129b384612941565b611a86565b9050828152602081018484840111156129d4576129d3611a10565b5b6129df848285612972565b509392505050565b600082601f8301126129fc576129fb611a0b565b5b8151612a0c8482602086016129a5565b91505092915050565b600060208284031215612a2b57612a2a6118b2565b5b600082015167ffffffffffffffff811115612a4957612a486118b7565b5b612a55848285016129e7565b91505092915050565b6000612a69826119d5565b9150612a74836119d5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612aad57612aac61263d565b5b828202905092915050565b600081519050612ac7816119df565b92915050565b600060208284031215612ae357612ae26118b2565b5b6000612af184828501612ab8565b91505092915050565b7f496e73756666696369656e7420636f6d62696e65642066756e64730000000000600082015250565b6000612b30601b836122d2565b9150612b3b82612afa565b602082019050919050565b60006020820190508181036000830152612b5f81612b23565b9050919050565b7f496e73756666696369656e74207061796d656e742066756e6473000000000000600082015250565b6000612b9c601a836122d2565b9150612ba782612b66565b602082019050919050565b60006020820190508181036000830152612bcb81612b8f565b9050919050565b7f496e73756666696369656e7420636f6c6c61746572616c2066756e6473000000600082015250565b6000612c08601d836122d2565b9150612c1382612bd2565b602082019050919050565b60006020820190508181036000830152612c3781612bfb565b9050919050565b604082016000820151612c546000850182611ccb565b506020820151612c676020850182611cda565b50505050565b6000608082019050612c826000830186611e35565b612c8f6020830185611f6b565b612c9c6040830184612c3e565b94935050505056fea2646970667358221220add7dca101f7450072df2b88ea09fe3db60eb71e69de3227ec28352ab6eef3c964736f6c63430008090033";

type NFTMarketExposedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketExposedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarketExposed__factory extends ContractFactory {
  constructor(...args: NFTMarketExposedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarketExposed> {
    return super.deploy(overrides || {}) as Promise<NFTMarketExposed>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarketExposed {
    return super.attach(address) as NFTMarketExposed;
  }
  override connect(signer: Signer): NFTMarketExposed__factory {
    return super.connect(signer) as NFTMarketExposed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketExposedInterface {
    return new utils.Interface(_abi) as NFTMarketExposedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketExposed {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketExposed;
  }
}
